{"ast":null,"code":"\"use strict\";exports.EraParser=void 0;var _Parser=require(\"../Parser.js\");class EraParser extends _Parser.Parser{constructor(){super(...arguments);this.priority=140;this.incompatibleTokens=[\"R\",\"u\",\"t\",\"T\"];}parse(dateString,token,match){switch(token){// AD, BC\ncase\"G\":case\"GG\":case\"GGG\":return match.era(dateString,{width:\"abbreviated\"})||match.era(dateString,{width:\"narrow\"});// A, B\ncase\"GGGGG\":return match.era(dateString,{width:\"narrow\"});// Anno Domini, Before Christ\ncase\"GGGG\":default:return match.era(dateString,{width:\"wide\"})||match.era(dateString,{width:\"abbreviated\"})||match.era(dateString,{width:\"narrow\"});}}set(date,flags,value){flags.era=value;date.setFullYear(value,0,1);date.setHours(0,0,0,0);return date;}}exports.EraParser=EraParser;","map":{"version":3,"names":["exports","EraParser","_Parser","require","Parser","constructor","arguments","priority","incompatibleTokens","parse","dateString","token","match","era","width","set","date","flags","value","setFullYear","setHours"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/parse/_lib/parsers/EraParser.js"],"sourcesContent":["\"use strict\";\nexports.EraParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nclass EraParser extends _Parser.Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\nexports.EraParser = EraParser;\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,SAAS,CAAG,IAAK,EAAC,CAE1B,GAAI,CAAAC,OAAO,CAAGC,OAAO,CAAC,cAAc,CAAC,CAErC,KAAM,CAAAF,SAAS,QAAS,CAAAC,OAAO,CAACE,MAAO,CAAAC,YAAA,WAAAC,SAAA,OACrCC,QAAQ,CAAG,GAAG,MAkCdC,kBAAkB,CAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,EAhCzCC,KAAKA,CAACC,UAAU,CAAEC,KAAK,CAAEC,KAAK,CAAE,CAC9B,OAAQD,KAAK,EACX;AACA,IAAK,GAAG,CACR,IAAK,IAAI,CACT,IAAK,KAAK,CACR,MACE,CAAAC,KAAK,CAACC,GAAG,CAACH,UAAU,CAAE,CAAEI,KAAK,CAAE,aAAc,CAAC,CAAC,EAC/CF,KAAK,CAACC,GAAG,CAACH,UAAU,CAAE,CAAEI,KAAK,CAAE,QAAS,CAAC,CAAC,CAG9C;AACA,IAAK,OAAO,CACV,MAAO,CAAAF,KAAK,CAACC,GAAG,CAACH,UAAU,CAAE,CAAEI,KAAK,CAAE,QAAS,CAAC,CAAC,CACnD;AACA,IAAK,MAAM,CACX,QACE,MACE,CAAAF,KAAK,CAACC,GAAG,CAACH,UAAU,CAAE,CAAEI,KAAK,CAAE,MAAO,CAAC,CAAC,EACxCF,KAAK,CAACC,GAAG,CAACH,UAAU,CAAE,CAAEI,KAAK,CAAE,aAAc,CAAC,CAAC,EAC/CF,KAAK,CAACC,GAAG,CAACH,UAAU,CAAE,CAAEI,KAAK,CAAE,QAAS,CAAC,CAAC,CAEhD,CACF,CAEAC,GAAGA,CAACC,IAAI,CAAEC,KAAK,CAAEC,KAAK,CAAE,CACtBD,KAAK,CAACJ,GAAG,CAAGK,KAAK,CACjBF,IAAI,CAACG,WAAW,CAACD,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC,CAC7BF,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB,MAAO,CAAAJ,IAAI,CACb,CAGF,CACAhB,OAAO,CAACC,SAAS,CAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
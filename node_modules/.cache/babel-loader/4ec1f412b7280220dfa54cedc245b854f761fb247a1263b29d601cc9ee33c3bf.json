{"ast":null,"code":"\"use strict\";exports.setMonth=setMonth;var _index=require(\"./constructFrom.js\");var _index2=require(\"./getDaysInMonth.js\");var _index3=require(\"./toDate.js\");/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param month - The month of the new date\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */function setMonth(date,month){const _date=(0,_index3.toDate)(date);const year=_date.getFullYear();const day=_date.getDate();const dateWithDesiredMonth=(0,_index.constructFrom)(date,0);dateWithDesiredMonth.setFullYear(year,month,15);dateWithDesiredMonth.setHours(0,0,0,0);const daysInMonth=(0,_index2.getDaysInMonth)(dateWithDesiredMonth);// Set the last day of the new month\n// if the original date was the last day of the longer month\n_date.setMonth(month,Math.min(day,daysInMonth));return _date;}","map":{"version":3,"names":["exports","setMonth","_index","require","_index2","_index3","date","month","_date","toDate","year","getFullYear","day","getDate","dateWithDesiredMonth","constructFrom","setFullYear","setHours","daysInMonth","getDaysInMonth","Math","min"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/setMonth.js"],"sourcesContent":["\"use strict\";\nexports.setMonth = setMonth;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./getDaysInMonth.js\");\nvar _index3 = require(\"./toDate.js\");\n\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param month - The month of the new date\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nfunction setMonth(date, month) {\n  const _date = (0, _index3.toDate)(date);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n\n  const dateWithDesiredMonth = (0, _index.constructFrom)(date, 0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = (0, _index2.getDaysInMonth)(dateWithDesiredMonth);\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  _date.setMonth(month, Math.min(day, daysInMonth));\n  return _date;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,QAAQ,CAAGA,QAAQ,CAC3B,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,oBAAoB,CAAC,CAC1C,GAAI,CAAAC,OAAO,CAAGD,OAAO,CAAC,qBAAqB,CAAC,CAC5C,GAAI,CAAAE,OAAO,CAAGF,OAAO,CAAC,aAAa,CAAC,CAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,QAAQA,CAACK,IAAI,CAAEC,KAAK,CAAE,CAC7B,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAEH,OAAO,CAACI,MAAM,EAAEH,IAAI,CAAC,CACvC,KAAM,CAAAI,IAAI,CAAGF,KAAK,CAACG,WAAW,CAAC,CAAC,CAChC,KAAM,CAAAC,GAAG,CAAGJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAE3B,KAAM,CAAAC,oBAAoB,CAAG,CAAC,CAAC,CAAEZ,MAAM,CAACa,aAAa,EAAET,IAAI,CAAE,CAAC,CAAC,CAC/DQ,oBAAoB,CAACE,WAAW,CAACN,IAAI,CAAEH,KAAK,CAAE,EAAE,CAAC,CACjDO,oBAAoB,CAACG,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzC,KAAM,CAAAC,WAAW,CAAG,CAAC,CAAC,CAAEd,OAAO,CAACe,cAAc,EAAEL,oBAAoB,CAAC,CACrE;AACA;AACAN,KAAK,CAACP,QAAQ,CAACM,KAAK,CAAEa,IAAI,CAACC,GAAG,CAACT,GAAG,CAAEM,WAAW,CAAC,CAAC,CACjD,MAAO,CAAAV,KAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";exports.LocalWeekYearParser=void 0;var _index=require(\"../../../getWeekYear.js\");var _index2=require(\"../../../startOfWeek.js\");var _Parser=require(\"../Parser.js\");var _utils=require(\"../utils.js\");// Local week-numbering year\nclass LocalWeekYearParser extends _Parser.Parser{constructor(){super(...arguments);this.priority=130;this.incompatibleTokens=[\"y\",\"R\",\"u\",\"Q\",\"q\",\"M\",\"L\",\"I\",\"d\",\"D\",\"i\",\"t\",\"T\"];}parse(dateString,token,match){const valueCallback=year=>({year,isTwoDigitYear:token===\"YY\"});switch(token){case\"Y\":return(0,_utils.mapValue)((0,_utils.parseNDigits)(4,dateString),valueCallback);case\"Yo\":return(0,_utils.mapValue)(match.ordinalNumber(dateString,{unit:\"year\"}),valueCallback);default:return(0,_utils.mapValue)((0,_utils.parseNDigits)(token.length,dateString),valueCallback);}}validate(_date,value){return value.isTwoDigitYear||value.year>0;}set(date,flags,value,options){const currentYear=(0,_index.getWeekYear)(date,options);if(value.isTwoDigitYear){const normalizedTwoDigitYear=(0,_utils.normalizeTwoDigitYear)(value.year,currentYear);date.setFullYear(normalizedTwoDigitYear,0,options.firstWeekContainsDate);date.setHours(0,0,0,0);return(0,_index2.startOfWeek)(date,options);}const year=!(\"era\"in flags)||flags.era===1?value.year:1-value.year;date.setFullYear(year,0,options.firstWeekContainsDate);date.setHours(0,0,0,0);return(0,_index2.startOfWeek)(date,options);}}exports.LocalWeekYearParser=LocalWeekYearParser;","map":{"version":3,"names":["exports","LocalWeekYearParser","_index","require","_index2","_Parser","_utils","Parser","constructor","arguments","priority","incompatibleTokens","parse","dateString","token","match","valueCallback","year","isTwoDigitYear","mapValue","parseNDigits","ordinalNumber","unit","length","validate","_date","value","set","date","flags","options","currentYear","getWeekYear","normalizedTwoDigitYear","normalizeTwoDigitYear","setFullYear","firstWeekContainsDate","setHours","startOfWeek","era"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js"],"sourcesContent":["\"use strict\";\nexports.LocalWeekYearParser = void 0;\nvar _index = require(\"../../../getWeekYear.js\");\n\nvar _index2 = require(\"../../../startOfWeek.js\");\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\n// Local week-numbering year\nclass LocalWeekYearParser extends _Parser.Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return (0, _utils.mapValue)(\n          (0, _utils.parseNDigits)(4, dateString),\n          valueCallback,\n        );\n      case \"Yo\":\n        return (0, _utils.mapValue)(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return (0, _utils.mapValue)(\n          (0, _utils.parseNDigits)(token.length, dateString),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = (0, _index.getWeekYear)(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = (0, _utils.normalizeTwoDigitYear)(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return (0, _index2.startOfWeek)(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return (0, _index2.startOfWeek)(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.LocalWeekYearParser = LocalWeekYearParser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
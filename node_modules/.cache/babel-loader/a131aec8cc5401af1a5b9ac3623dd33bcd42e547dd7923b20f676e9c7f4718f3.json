{"ast":null,"code":"var _jsxFileName = \"/Users/mikejabrhamdan/grides-react-app/src/components/Step1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment-timezone';\nimport './Step1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Step1 = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pickupLocation, setPickupLocation] = useState(localStorage.getItem('selectedAddress') || '');\n  const [returnLocation, setReturnLocation] = useState('');\n  const [pickupDateTime, setPickupDateTime] = useState(new Date());\n  const [returnDateTime, setReturnDateTime] = useState(null);\n  const [deliverToMe, setDeliverToMe] = useState(false);\n  const [customAddress, setCustomAddress] = useState('');\n  const [locations, setLocations] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const history = useHistory();\n  const [minReturnDateTime, setMinReturnDateTime] = useState();\n  const [selectedDate, setSelectedDate] = useState(null); // State to hold the selected date\n  const [dateFromURL, setDateFromURL] = useState(''); // State to hold the formatted date for URL\n  const [dateToURL, setDateToURL] = useState(''); // State to hold the formatted date for URL\n\n  useEffect(() => {\n    localStorage.removeItem('DateFromURL');\n    localStorage.removeItem('DateToURL');\n    localStorage.removeItem('PickupLocationURL');\n    localStorage.removeItem('ReturnLocationURL');\n    localStorage.removeItem('CustomAddressURL');\n    localStorage.removeItem('PickupLocation');\n    localStorage.removeItem('dateFrom');\n    localStorage.removeItem('dateTo');\n    localStorage.removeItem('finalReturnLocation');\n    localStorage.removeItem('selectedLocationName');\n    localStorage.removeItem('Duration');\n    localStorage.removeItem('pickupLocation');\n    localStorage.removeItem('returnLocation');\n    localStorage.removeItem('token');\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const tokenResponse = await axios.post('https://calm-retreat-90846-cd036e8a822e.herokuapp.com/https://api.rentsyst.com/oauth2/token', {\n          client_id: '3vN90WwtPO_FpaJXpC4YlG5IWdJE4GZG',\n          client_secret: 'Jfjrmns8K25aDY_zQdz9Q6KolwgITUxp',\n          grant_type: 'client_credentials'\n        });\n        const token = tokenResponse.data.access_token;\n        localStorage.setItem('token', token);\n        console.log('Token:', token); // Log the token to verify\n\n        const locationsResponse = await axios.get('https://calm-retreat-90846-cd036e8a822e.herokuapp.com/https://api.rentsyst.com/v2/company/settings', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Locations Response:', locationsResponse); // Log the response to verify\n\n        const data = locationsResponse.data.locations;\n        setLocations(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to fetch data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (pickupDateTime) {\n      // Calculate the minimum return date/time as 48 hours after the pickup date/time\n      const minReturnDate = new Date(pickupDateTime.getTime() + 48 * 60 * 60 * 1000);\n      setMinReturnDateTime(minReturnDate);\n\n      // If the currently selected return date/time is less than 48 hours after the pickup,\n      // reset the return date/time to enforce the 48-hour rule\n      if (returnDateTime && returnDateTime < minReturnDate) {\n        setReturnDateTime(minReturnDate);\n      }\n    }\n  }, [pickupDateTime, returnDateTime]);\n  const handleLocationChange = e => {\n    const value = e.target.value;\n    console.log('Selected location value:', value);\n    setSelectedLocation(value);\n    console.log('Current locations array:', locations); // Log the locations array for inspection\n\n    if (value === 'deliver_to_me') {\n      console.log('Deliver to me selected');\n      setDeliverToMe(true);\n    } else {\n      const selectedLocationObj = locations.find(location => location.id.toString() === value);\n      console.log('Selected location object:', selectedLocationObj); // Check what the find method returns\n\n      if (selectedLocationObj) {\n        const locationName = selectedLocationObj.name;\n        console.log('Selected location name:', locationName);\n        setPickupLocation(locationName);\n        setReturnLocation(locationName);\n\n        // Store the location ID for API calls\n        localStorage.setItem('PickupLocationURL', selectedLocationObj.id.toString());\n        localStorage.setItem('ReturnLocationURL', selectedLocationObj.id.toString());\n        try {\n          localStorage.setItem('pickupLocation', locationName);\n          localStorage.setItem('returnLocation', locationName);\n          console.log('Locations stored in localStorage');\n        } catch (error) {\n          console.error('Error setting locations in localStorage:', error);\n        }\n      } else {\n        console.log('No matching location found for the selected value');\n      }\n      setDeliverToMe(false);\n      setStep(2);\n    }\n  };\n  const handleSelect = async value => {\n    setSelectedLocation('deliver_to_me');\n    try {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      setCustomAddress(value); // Update the custom address with the selected Google Maps address\n      localStorage.setItem('selectedAddress', value); // Store the selected address in local storage\n      localStorage.setItem('CustomAddressURL', value); // Store the Google Maps address for API call\n    } catch (error) {\n      console.error('Error selecting address:', error);\n      setError(error.message);\n    }\n  };\n  const handlePickupChange = date => {\n    // Ensure the pickup date is not in the past\n    const currentDate = new Date();\n    const selectedDate = new Date(date);\n    if (currentDate.getTime() < selectedDate.getTime()) {\n      const utcDate = moment.utc(date).format();\n      const localDate = moment.utc(utcDate).local().toDate();\n      setPickupDateTime(localDate);\n      // Format and save the pickup date/time to localStorage in the specified format\n      localStorage.setItem('DateFromURL', moment(localDate).format(\"YYYY-MM-DD HH:mm:ss\"));\n      // Load DateFromURL to local state\n      setDateFromURL(moment(localDate).format(\"YYYY-MM-DD HH:mm:ss\"));\n    }\n  };\n  const handleReturnChange = date => {\n    if (!pickupDateTime) {\n      return;\n    }\n    const selectedDate = new Date(date);\n    if (pickupDateTime.getTime() < selectedDate.getTime()) {\n      const utcDate = moment.utc(date).format();\n      const localDate = moment.utc(utcDate).local().toDate();\n      setReturnDateTime(localDate);\n      // Format and save the return date/time to localStorage in the specified format\n      localStorage.setItem('DateToURL', moment(localDate).format(\"YYYY-MM-DD HH:mm:ss\"));\n      // Load DateFromURL from local storage\n      const dateFromURL = localStorage.getItem('DateFromURL');\n      setDateFromURL(dateFromURL);\n    }\n  };\n  const handleSubmitCustomAddress = () => {\n    const selectedLocationName = customAddress;\n    localStorage.setItem('selectedLocationName', selectedLocationName);\n    localStorage.setItem('pickupLocation', selectedLocationName); // Store pickupLocation in local storage\n    localStorage.setItem('returnLocation', selectedLocationName); // Store returnLocation in local storage\n    localStorage.setItem('CustomAddressURL', selectedLocationName); // Store the Google Maps address for API call\n    setStep(2);\n  };\n  const handlePickupConfirmation = () => {\n    setStep(3);\n    const formattedFromDate = pickupDateTime.toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n    localStorage.setItem('dateFrom', formattedFromDate);\n  };\n  const handleReturnConfirmation = () => {\n    setStep(4);\n    const formattedToDate = returnDateTime.toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true\n    });\n    localStorage.setItem('dateTo', formattedToDate);\n  };\n  const handleViewVehicles = () => {\n    history.push({\n      pathname: '/step2',\n      state: {\n        pickupLocation,\n        // Pass pickupLocation to Step2.js\n        returnLocation // Pass returnLocation to Step2.js\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [loading && /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }, this), !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        alt: \"G RIDES Logo\",\n        className: \"logo\",\n        style: {\n          position: 'absolute',\n          top: '60px',\n          left: '10px',\n          marginTop: '0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your destination awaits\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservation-details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"location\",\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"location\",\n              value: selectedLocation,\n              onChange: handleLocationChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), locations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: location.id,\n                children: location.name\n              }, location.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"deliver_to_me\",\n                children: \"Deliver to me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), deliverToMe && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"customAddress\",\n                children: \"Enter Delivery Address (charges may apply):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-address-input\",\n                children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n                  value: customAddress,\n                  onChange: setCustomAddress,\n                  onSelect: handleSelect,\n                  searchOptions: {\n                    types: ['address'],\n                    apiKey: 'AIzaSyDBinmfAS11SOAd1qlLQWDSRAvMJWwKM98',\n                    language: 'en'\n                  },\n                  children: ({\n                    getInputProps,\n                    suggestions,\n                    getSuggestionItemProps,\n                    loading\n                  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"autocomplete-container\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      ...getInputProps({\n                        placeholder: 'Search for your address...',\n                        className: 'location-search-input'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"autocomplete-dropdown-container\",\n                      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"Loading...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 45\n                      }, this), suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n                        ...getSuggestionItemProps(suggestion, {\n                          className: suggestion.active ? 'suggestion-item--active' : 'suggestion-item'\n                        }),\n                        children: suggestion.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 35\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleSubmitCustomAddress,\n                  children: \"Submit Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pickupDate\",\n              children: \"Pickup Date and Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-time-picker-container\",\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                id: \"pickupDate\",\n                selected: pickupDateTime,\n                onChange: handlePickupChange,\n                showTimeSelect: true,\n                dateFormat: \"MMMM d, yyyy hh:mm aa\",\n                required: true,\n                calendarClassName: \"custom-calendar\",\n                filterTime: time => {\n                  const currentDate = new Date();\n                  const oneHourForward = new Date(currentDate.getTime() + 60 * 60 * 1000);\n                  return new Date(time) > oneHourForward;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"confirm-button\",\n                onClick: handlePickupConfirmation,\n                style: {\n                  width: 'auto',\n                  padding: '10px 20px'\n                },\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"returnDate\",\n              children: \"Return Date and Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-time-picker-container\",\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                id: \"returnDate\",\n                selected: returnDateTime,\n                onChange: handleReturnChange,\n                showTimeSelect: true,\n                dateFormat: \"MMMM d, yyyy hh:mm aa\",\n                required: true,\n                calendarClassName: \"custom-calendar\",\n                minDate: minReturnDateTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"confirm-button\",\n                onClick: handleReturnConfirmation,\n                style: {\n                  width: 'auto',\n                  padding: '10px 20px'\n                },\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: 'white',\n                fontSize: '16px',\n                marginTop: '10px'\n              },\n              children: \"*Please enter Return Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), step === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button\",\n              onClick: handleViewVehicles,\n              children: \"View Vehicles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(Step1, \"aRHe3GDzUXtOgnDvSTFX3EkwwJY=\", false, function () {\n  return [useHistory];\n});\n_c = Step1;\nconst LoadingScreen = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-screen\",\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"/logo.png\",\n    alt: \"G RIDES Logo\",\n    className: \"logo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-bar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar\",\n      style: {\n        width: `90%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 336,\n  columnNumber: 3\n}, this);\n_c2 = LoadingScreen;\nexport default Step1;\nvar _c, _c2;\n$RefreshReg$(_c, \"Step1\");\n$RefreshReg$(_c2, \"LoadingScreen\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","axios","PlacesAutocomplete","geocodeByAddress","getLatLng","DatePicker","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Step1","_s","step","setStep","loading","setLoading","error","setError","pickupLocation","setPickupLocation","localStorage","getItem","returnLocation","setReturnLocation","pickupDateTime","setPickupDateTime","Date","returnDateTime","setReturnDateTime","deliverToMe","setDeliverToMe","customAddress","setCustomAddress","locations","setLocations","selectedLocation","setSelectedLocation","history","minReturnDateTime","setMinReturnDateTime","selectedDate","setSelectedDate","dateFromURL","setDateFromURL","dateToURL","setDateToURL","removeItem","fetchData","tokenResponse","post","client_id","client_secret","grant_type","token","data","access_token","setItem","console","log","locationsResponse","get","headers","Authorization","minReturnDate","getTime","handleLocationChange","e","value","target","selectedLocationObj","find","location","id","toString","locationName","name","handleSelect","results","latLng","message","handlePickupChange","date","currentDate","utcDate","utc","format","localDate","local","toDate","handleReturnChange","handleSubmitCustomAddress","selectedLocationName","handlePickupConfirmation","formattedFromDate","toLocaleString","year","month","day","hour","minute","hour12","handleReturnConfirmation","formattedToDate","handleViewVehicles","push","pathname","state","className","children","LoadingScreen","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","position","top","left","marginTop","htmlFor","onChange","required","map","onSelect","searchOptions","types","apiKey","language","getInputProps","suggestions","getSuggestionItemProps","placeholder","suggestion","active","description","onClick","display","alignItems","gap","selected","showTimeSelect","dateFormat","calendarClassName","filterTime","time","oneHourForward","width","padding","minDate","color","fontSize","_c","_c2","$RefreshReg$"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/components/Step1.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport DatePicker from 'react-datepicker';\nimport './App.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment-timezone';\nimport './Step1.css';\n\nconst Step1 = () => {\n  const [step, setStep] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pickupLocation, setPickupLocation] = useState(localStorage.getItem('selectedAddress') || '');\n  const [returnLocation, setReturnLocation] = useState('');\n  const [pickupDateTime, setPickupDateTime] = useState(new Date());\n  const [returnDateTime, setReturnDateTime] = useState(null);\n  const [deliverToMe, setDeliverToMe] = useState(false);\n  const [customAddress, setCustomAddress] = useState('');\n  const [locations, setLocations] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState('');\n  const history = useHistory();\n  const [minReturnDateTime, setMinReturnDateTime] = useState();\n  const [selectedDate, setSelectedDate] = useState(null); // State to hold the selected date\n  const [dateFromURL, setDateFromURL] = useState(''); // State to hold the formatted date for URL\n  const [dateToURL, setDateToURL] = useState(''); // State to hold the formatted date for URL\n  \n  useEffect(() => {\n    localStorage.removeItem('DateFromURL');\n    localStorage.removeItem('DateToURL');\n    localStorage.removeItem('PickupLocationURL');\n    localStorage.removeItem('ReturnLocationURL');\n    localStorage.removeItem('CustomAddressURL');\n    localStorage.removeItem('PickupLocation');\n    localStorage.removeItem('dateFrom');\n    localStorage.removeItem('dateTo');\n    localStorage.removeItem('finalReturnLocation');\n    localStorage.removeItem('selectedLocationName');     \n    localStorage.removeItem('Duration');\n    localStorage.removeItem('pickupLocation');\n    localStorage.removeItem('returnLocation');\n    localStorage.removeItem('token');\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const tokenResponse = await axios.post('https://calm-retreat-90846-cd036e8a822e.herokuapp.com/https://api.rentsyst.com/oauth2/token', {\n          client_id: '3vN90WwtPO_FpaJXpC4YlG5IWdJE4GZG',\n          client_secret: 'Jfjrmns8K25aDY_zQdz9Q6KolwgITUxp',\n          grant_type: 'client_credentials'\n        });\n        const token = tokenResponse.data.access_token;\n        localStorage.setItem('token', token);\n\n        console.log('Token:', token); // Log the token to verify\n\n        const locationsResponse = await axios.get('https://calm-retreat-90846-cd036e8a822e.herokuapp.com/https://api.rentsyst.com/v2/company/settings', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        console.log('Locations Response:', locationsResponse); // Log the response to verify\n\n        const data = locationsResponse.data.locations;\n        setLocations(data);\n\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to fetch data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (pickupDateTime) {\n      // Calculate the minimum return date/time as 48 hours after the pickup date/time\n      const minReturnDate = new Date(pickupDateTime.getTime() + 48 * 60 * 60 * 1000);\n      setMinReturnDateTime(minReturnDate);\n\n      // If the currently selected return date/time is less than 48 hours after the pickup,\n      // reset the return date/time to enforce the 48-hour rule\n      if (returnDateTime && returnDateTime < minReturnDate) {\n        setReturnDateTime(minReturnDate);\n      }\n    }\n  }, [pickupDateTime, returnDateTime]);\n\n  const handleLocationChange = (e) => {\n    const value = e.target.value;\n    console.log('Selected location value:', value);\n\n    setSelectedLocation(value);\n\n    console.log('Current locations array:', locations); // Log the locations array for inspection\n\n    if (value === 'deliver_to_me') {\n      console.log('Deliver to me selected');\n      setDeliverToMe(true);\n    } else {\n      const selectedLocationObj = locations.find(location => location.id.toString() === value);\n      console.log('Selected location object:', selectedLocationObj); // Check what the find method returns\n\n      if (selectedLocationObj) {\n        const locationName = selectedLocationObj.name;\n        console.log('Selected location name:', locationName);\n\n        setPickupLocation(locationName);\n        setReturnLocation(locationName);\n\n        // Store the location ID for API calls\n        localStorage.setItem('PickupLocationURL', selectedLocationObj.id.toString());\n        localStorage.setItem('ReturnLocationURL', selectedLocationObj.id.toString());\n\n        try {\n          localStorage.setItem('pickupLocation', locationName);\n          localStorage.setItem('returnLocation', locationName);\n          console.log('Locations stored in localStorage');\n        } catch (error) {\n          console.error('Error setting locations in localStorage:', error);\n        }\n      } else {\n        console.log('No matching location found for the selected value');\n      }\n      setDeliverToMe(false);\n      setStep(2);\n    }\n  };\n\n  const handleSelect = async (value) => {\n    setSelectedLocation('deliver_to_me');\n    try {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      setCustomAddress(value); // Update the custom address with the selected Google Maps address\n      localStorage.setItem('selectedAddress', value); // Store the selected address in local storage\n      localStorage.setItem('CustomAddressURL', value); // Store the Google Maps address for API call\n    } catch (error) {\n      console.error('Error selecting address:', error);\n      setError(error.message);\n    }\n  };\n\n  const handlePickupChange = (date) => {\n    // Ensure the pickup date is not in the past\n    const currentDate = new Date();\n    const selectedDate = new Date(date);\n\n    if (currentDate.getTime() < selectedDate.getTime()) {\n      const utcDate = moment.utc(date).format();\n      const localDate = moment.utc(utcDate).local().toDate();\n      setPickupDateTime(localDate);\n      // Format and save the pickup date/time to localStorage in the specified format\n      localStorage.setItem('DateFromURL', moment(localDate).format(\"YYYY-MM-DD HH:mm:ss\"));\n      // Load DateFromURL to local state\n      setDateFromURL(moment(localDate).format(\"YYYY-MM-DD HH:mm:ss\"));\n    }\n};\n\nconst handleReturnChange = (date) => {\n    if (!pickupDateTime) {\n        return;\n    }\n    const selectedDate = new Date(date);\n    if (pickupDateTime.getTime() < selectedDate.getTime()) {\n        const utcDate = moment.utc(date).format();\n        const localDate = moment.utc(utcDate).local().toDate();\n        setReturnDateTime(localDate);\n        // Format and save the return date/time to localStorage in the specified format\n        localStorage.setItem('DateToURL', moment(localDate).format(\"YYYY-MM-DD HH:mm:ss\"));\n        // Load DateFromURL from local storage\n        const dateFromURL = localStorage.getItem('DateFromURL');\n        setDateFromURL(dateFromURL);\n    }\n};\n\n\n  const handleSubmitCustomAddress = () => {\n    const selectedLocationName = customAddress;\n    localStorage.setItem('selectedLocationName', selectedLocationName);\n    localStorage.setItem('pickupLocation', selectedLocationName); // Store pickupLocation in local storage\n    localStorage.setItem('returnLocation', selectedLocationName); // Store returnLocation in local storage\n    localStorage.setItem('CustomAddressURL', selectedLocationName); // Store the Google Maps address for API call\n    setStep(2);\n  };\n\n  const handlePickupConfirmation = () => {\n    setStep(3);\n    const formattedFromDate = pickupDateTime.toLocaleString('en-US', { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true });\n    localStorage.setItem('dateFrom', formattedFromDate);\n  };\n\n  const handleReturnConfirmation = () => {\n    setStep(4);\n    const formattedToDate = returnDateTime.toLocaleString('en-US', { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true });\n    localStorage.setItem('dateTo', formattedToDate);\n  };\n\n  const handleViewVehicles = () => {\n    history.push({\n      pathname: '/step2',\n      state: {\n        pickupLocation, // Pass pickupLocation to Step2.js\n        returnLocation, // Pass returnLocation to Step2.js\n      },\n    });\n  };\n\n\n  return (\n    <div className=\"app\">\n      {loading && <LoadingScreen />}\n      {!loading && (\n        <>\n          <img src=\"/logo.png\" alt=\"G RIDES Logo\" className=\"logo\" style={{ position: 'absolute', top: '60px', left: '10px', marginTop: '0' }} />\n          <div className=\"content-container\">\n            <h1>Your destination awaits…</h1>\n            <div className=\"input-container\">\n              <div className=\"reservation-details\">\n              </div>\n              {step === 1 && (\n                <div className=\"step\">\n                  <label htmlFor=\"location\">Location:</label>\n                  <select id=\"location\" value={selectedLocation} onChange={handleLocationChange} required>\n                    <option value=\"\">Select Location</option>\n                    {locations.map(location => (\n                      <option key={location.id} value={location.id}>{location.name}</option>\n                    ))}\n                    <option value=\"deliver_to_me\">Deliver to me</option>\n                  </select>\n                  {deliverToMe && (\n                    <div className=\"form-group\">\n                      <label htmlFor=\"customAddress\">Enter Delivery Address (charges may apply):</label>\n                      <div className=\"custom-address-input\">\n                        <PlacesAutocomplete\n                          value={customAddress}\n                          onChange={setCustomAddress}\n                          onSelect={handleSelect}\n                          searchOptions={{\n                            types: ['address'],\n                            apiKey: 'AIzaSyDBinmfAS11SOAd1qlLQWDSRAvMJWwKM98',\n                            language: 'en',\n                          }}\n                        >\n                          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                            <div className=\"autocomplete-container\">\n                              <input\n                                {...getInputProps({\n                                  placeholder: 'Search for your address...',\n                                  className: 'location-search-input',\n                                })}\n                              />\n                              <div className=\"autocomplete-dropdown-container\">\n                                {loading && <div>Loading...</div>}\n                                {suggestions.map((suggestion) => (\n                                  <div\n                                    {...getSuggestionItemProps(suggestion, {\n                                      className: suggestion.active ? 'suggestion-item--active' : 'suggestion-item',\n                                    })}\n                                  >\n                                    {suggestion.description}\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </PlacesAutocomplete>\n                        <button onClick={handleSubmitCustomAddress}>Submit Address</button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n              {step === 2 && (\n                <div className=\"step\">\n                  <label htmlFor=\"pickupDate\">Pickup Date and Time:</label>\n                  <div className=\"date-time-picker-container\" style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                    <DatePicker\n                      id=\"pickupDate\"\n                      selected={pickupDateTime}\n                      onChange={handlePickupChange}\n                      showTimeSelect\n                      dateFormat=\"MMMM d, yyyy hh:mm aa\"\n                      required\n                      calendarClassName=\"custom-calendar\"\n                      filterTime={time => {\n                        const currentDate = new Date();\n                        const oneHourForward = new Date(currentDate.getTime() + 60 * 60 * 1000);\n                        return new Date(time) > oneHourForward;\n                      }}\n                    />\n                    <button className=\"confirm-button\" onClick={handlePickupConfirmation} style={{ width: 'auto', padding: '10px 20px' }}>Confirm</button>\n                  </div>\n                </div>\n              )}\n              {step === 3 && (\n                <div className=\"step\">\n                  <label htmlFor=\"returnDate\">Return Date and Time:</label>\n                  <div className=\"date-time-picker-container\" style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                    <DatePicker\n                      id=\"returnDate\"\n                      selected={returnDateTime}\n                      onChange={handleReturnChange}\n                      showTimeSelect\n                      dateFormat=\"MMMM d, yyyy hh:mm aa\"\n                      required\n                      calendarClassName=\"custom-calendar\"\n                      minDate={minReturnDateTime}\n                    />\n                    <button className=\"confirm-button\" onClick={handleReturnConfirmation} style={{ width: 'auto', padding: '10px 20px' }}>Confirm</button>\n                  </div>\n                  <div style={{ color: 'white', fontSize: '16px', marginTop: '10px' }}>*Please enter Return Time</div>\n                </div>\n              )}\n              {step === 4 && (\n                <div className=\"step\">\n                  <button className=\"submit-button\" onClick={handleViewVehicles}>View Vehicles</button>\n                </div>\n              )}\n              {error && <div className=\"error-message\">{error}</div>}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst LoadingScreen = () => (\n  <div className=\"loading-screen\">\n    <img src=\"/logo.png\" alt=\"G RIDES Logo\" className=\"logo\" />\n    <div className=\"loading-bar-container\">\n      <div className=\"loading-bar\" style={{ width: `90%` }}></div>\n    </div>\n  </div>\n);\n\nexport default Step1;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
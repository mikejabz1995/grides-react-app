{"ast":null,"code":"\"use strict\";exports.isEqual=isEqual;var _index=require(\"./toDate.js\");/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */function isEqual(leftDate,rightDate){const _dateLeft=(0,_index.toDate)(leftDate);const _dateRight=(0,_index.toDate)(rightDate);return+_dateLeft===+_dateRight;}","map":{"version":3,"names":["exports","isEqual","_index","require","leftDate","rightDate","_dateLeft","toDate","_dateRight"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/isEqual.js"],"sourcesContent":["\"use strict\";\nexports.isEqual = isEqual;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * const result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual(leftDate, rightDate) {\n  const _dateLeft = (0, _index.toDate)(leftDate);\n  const _dateRight = (0, _index.toDate)(rightDate);\n  return +_dateLeft === +_dateRight;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,OAAO,CAAGA,OAAO,CACzB,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,aAAa,CAAC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,OAAOA,CAACG,QAAQ,CAAEC,SAAS,CAAE,CACpC,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CAAEJ,MAAM,CAACK,MAAM,EAAEH,QAAQ,CAAC,CAC9C,KAAM,CAAAI,UAAU,CAAG,CAAC,CAAC,CAAEN,MAAM,CAACK,MAAM,EAAEF,SAAS,CAAC,CAChD,MAAO,CAACC,SAAS,GAAK,CAACE,UAAU,CACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
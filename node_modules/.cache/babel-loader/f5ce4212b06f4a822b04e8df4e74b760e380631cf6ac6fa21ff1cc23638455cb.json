{"ast":null,"code":"\"use strict\";exports.StandAloneQuarterParser=void 0;var _Parser=require(\"../Parser.js\");var _utils=require(\"../utils.js\");class StandAloneQuarterParser extends _Parser.Parser{constructor(){super(...arguments);this.priority=120;this.incompatibleTokens=[\"Y\",\"R\",\"Q\",\"M\",\"L\",\"w\",\"I\",\"d\",\"D\",\"i\",\"e\",\"c\",\"t\",\"T\"];}parse(dateString,token,match){switch(token){// 1, 2, 3, 4\ncase\"q\":case\"qq\":// 01, 02, 03, 04\nreturn(0,_utils.parseNDigits)(token.length,dateString);// 1st, 2nd, 3rd, 4th\ncase\"qo\":return match.ordinalNumber(dateString,{unit:\"quarter\"});// Q1, Q2, Q3, Q4\ncase\"qqq\":return match.quarter(dateString,{width:\"abbreviated\",context:\"standalone\"})||match.quarter(dateString,{width:\"narrow\",context:\"standalone\"});// 1, 2, 3, 4 (narrow quarter; could be not numerical)\ncase\"qqqqq\":return match.quarter(dateString,{width:\"narrow\",context:\"standalone\"});// 1st quarter, 2nd quarter, ...\ncase\"qqqq\":default:return match.quarter(dateString,{width:\"wide\",context:\"standalone\"})||match.quarter(dateString,{width:\"abbreviated\",context:\"standalone\"})||match.quarter(dateString,{width:\"narrow\",context:\"standalone\"});}}validate(_date,value){return value>=1&&value<=4;}set(date,_flags,value){date.setMonth((value-1)*3,1);date.setHours(0,0,0,0);return date;}}exports.StandAloneQuarterParser=StandAloneQuarterParser;","map":{"version":3,"names":["exports","StandAloneQuarterParser","_Parser","require","_utils","Parser","constructor","arguments","priority","incompatibleTokens","parse","dateString","token","match","parseNDigits","length","ordinalNumber","unit","quarter","width","context","validate","_date","value","set","date","_flags","setMonth","setHours"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js"],"sourcesContent":["\"use strict\";\nexports.StandAloneQuarterParser = void 0;\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass StandAloneQuarterParser extends _Parser.Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return (0, _utils.parseNDigits)(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.StandAloneQuarterParser = StandAloneQuarterParser;\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,uBAAuB,CAAG,IAAK,EAAC,CACxC,GAAI,CAAAC,OAAO,CAAGC,OAAO,CAAC,cAAc,CAAC,CAErC,GAAI,CAAAC,MAAM,CAAGD,OAAO,CAAC,aAAa,CAAC,CAEnC,KAAM,CAAAF,uBAAuB,QAAS,CAAAC,OAAO,CAACG,MAAO,CAAAC,YAAA,WAAAC,SAAA,OACnDC,QAAQ,CAAG,GAAG,MA4DdC,kBAAkB,CAAG,CACnB,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACH,GAAG,CACJ,EAzEDC,KAAKA,CAACC,UAAU,CAAEC,KAAK,CAAEC,KAAK,CAAE,CAC9B,OAAQD,KAAK,EACX;AACA,IAAK,GAAG,CACR,IAAK,IAAI,CAAE;AACT,MAAO,CAAC,CAAC,CAAER,MAAM,CAACU,YAAY,EAAEF,KAAK,CAACG,MAAM,CAAEJ,UAAU,CAAC,CAC3D;AACA,IAAK,IAAI,CACP,MAAO,CAAAE,KAAK,CAACG,aAAa,CAACL,UAAU,CAAE,CAAEM,IAAI,CAAE,SAAU,CAAC,CAAC,CAC7D;AACA,IAAK,KAAK,CACR,MACE,CAAAJ,KAAK,CAACK,OAAO,CAACP,UAAU,CAAE,CACxBQ,KAAK,CAAE,aAAa,CACpBC,OAAO,CAAE,YACX,CAAC,CAAC,EACFP,KAAK,CAACK,OAAO,CAACP,UAAU,CAAE,CACxBQ,KAAK,CAAE,QAAQ,CACfC,OAAO,CAAE,YACX,CAAC,CAAC,CAGN;AACA,IAAK,OAAO,CACV,MAAO,CAAAP,KAAK,CAACK,OAAO,CAACP,UAAU,CAAE,CAC/BQ,KAAK,CAAE,QAAQ,CACfC,OAAO,CAAE,YACX,CAAC,CAAC,CACJ;AACA,IAAK,MAAM,CACX,QACE,MACE,CAAAP,KAAK,CAACK,OAAO,CAACP,UAAU,CAAE,CACxBQ,KAAK,CAAE,MAAM,CACbC,OAAO,CAAE,YACX,CAAC,CAAC,EACFP,KAAK,CAACK,OAAO,CAACP,UAAU,CAAE,CACxBQ,KAAK,CAAE,aAAa,CACpBC,OAAO,CAAE,YACX,CAAC,CAAC,EACFP,KAAK,CAACK,OAAO,CAACP,UAAU,CAAE,CACxBQ,KAAK,CAAE,QAAQ,CACfC,OAAO,CAAE,YACX,CAAC,CAAC,CAER,CACF,CAEAC,QAAQA,CAACC,KAAK,CAAEC,KAAK,CAAE,CACrB,MAAO,CAAAA,KAAK,EAAI,CAAC,EAAIA,KAAK,EAAI,CAAC,CACjC,CAEAC,GAAGA,CAACC,IAAI,CAAEC,MAAM,CAAEH,KAAK,CAAE,CACvBE,IAAI,CAACE,QAAQ,CAAC,CAACJ,KAAK,CAAG,CAAC,EAAI,CAAC,CAAE,CAAC,CAAC,CACjCE,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACzB,MAAO,CAAAH,IAAI,CACb,CAkBF,CACAzB,OAAO,CAACC,uBAAuB,CAAGA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
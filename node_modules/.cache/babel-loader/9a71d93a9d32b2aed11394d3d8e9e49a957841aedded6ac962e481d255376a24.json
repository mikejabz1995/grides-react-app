{"ast":null,"code":"\"use strict\";exports.getISOWeekYear=getISOWeekYear;var _index=require(\"./constructFrom.js\");var _index2=require(\"./startOfISOWeek.js\");var _index3=require(\"./toDate.js\");/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */function getISOWeekYear(date){const _date=(0,_index3.toDate)(date);const year=_date.getFullYear();const fourthOfJanuaryOfNextYear=(0,_index.constructFrom)(date,0);fourthOfJanuaryOfNextYear.setFullYear(year+1,0,4);fourthOfJanuaryOfNextYear.setHours(0,0,0,0);const startOfNextYear=(0,_index2.startOfISOWeek)(fourthOfJanuaryOfNextYear);const fourthOfJanuaryOfThisYear=(0,_index.constructFrom)(date,0);fourthOfJanuaryOfThisYear.setFullYear(year,0,4);fourthOfJanuaryOfThisYear.setHours(0,0,0,0);const startOfThisYear=(0,_index2.startOfISOWeek)(fourthOfJanuaryOfThisYear);if(_date.getTime()>=startOfNextYear.getTime()){return year+1;}else if(_date.getTime()>=startOfThisYear.getTime()){return year;}else{return year-1;}}","map":{"version":3,"names":["exports","getISOWeekYear","_index","require","_index2","_index3","date","_date","toDate","year","getFullYear","fourthOfJanuaryOfNextYear","constructFrom","setFullYear","setHours","startOfNextYear","startOfISOWeek","fourthOfJanuaryOfThisYear","startOfThisYear","getTime"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/getISOWeekYear.js"],"sourcesContent":["\"use strict\";\nexports.getISOWeekYear = getISOWeekYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./startOfISOWeek.js\");\nvar _index3 = require(\"./toDate.js\");\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOWeekYear(date) {\n  const _date = (0, _index3.toDate)(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = (0, _index.constructFrom)(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = (0, _index2.startOfISOWeek)(\n    fourthOfJanuaryOfNextYear,\n  );\n\n  const fourthOfJanuaryOfThisYear = (0, _index.constructFrom)(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = (0, _index2.startOfISOWeek)(\n    fourthOfJanuaryOfThisYear,\n  );\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,cAAc,CAAGA,cAAc,CACvC,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,oBAAoB,CAAC,CAC1C,GAAI,CAAAC,OAAO,CAAGD,OAAO,CAAC,qBAAqB,CAAC,CAC5C,GAAI,CAAAE,OAAO,CAAGF,OAAO,CAAC,aAAa,CAAC,CAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,cAAcA,CAACK,IAAI,CAAE,CAC5B,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAEF,OAAO,CAACG,MAAM,EAAEF,IAAI,CAAC,CACvC,KAAM,CAAAG,IAAI,CAAGF,KAAK,CAACG,WAAW,CAAC,CAAC,CAEhC,KAAM,CAAAC,yBAAyB,CAAG,CAAC,CAAC,CAAET,MAAM,CAACU,aAAa,EAAEN,IAAI,CAAE,CAAC,CAAC,CACpEK,yBAAyB,CAACE,WAAW,CAACJ,IAAI,CAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACrDE,yBAAyB,CAACG,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC9C,KAAM,CAAAC,eAAe,CAAG,CAAC,CAAC,CAAEX,OAAO,CAACY,cAAc,EAChDL,yBACF,CAAC,CAED,KAAM,CAAAM,yBAAyB,CAAG,CAAC,CAAC,CAAEf,MAAM,CAACU,aAAa,EAAEN,IAAI,CAAE,CAAC,CAAC,CACpEW,yBAAyB,CAACJ,WAAW,CAACJ,IAAI,CAAE,CAAC,CAAE,CAAC,CAAC,CACjDQ,yBAAyB,CAACH,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC9C,KAAM,CAAAI,eAAe,CAAG,CAAC,CAAC,CAAEd,OAAO,CAACY,cAAc,EAChDC,yBACF,CAAC,CAED,GAAIV,KAAK,CAACY,OAAO,CAAC,CAAC,EAAIJ,eAAe,CAACI,OAAO,CAAC,CAAC,CAAE,CAChD,MAAO,CAAAV,IAAI,CAAG,CAAC,CACjB,CAAC,IAAM,IAAIF,KAAK,CAACY,OAAO,CAAC,CAAC,EAAID,eAAe,CAACC,OAAO,CAAC,CAAC,CAAE,CACvD,MAAO,CAAAV,IAAI,CACb,CAAC,IAAM,CACL,MAAO,CAAAA,IAAI,CAAG,CAAC,CACjB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";exports.getTimezoneOffsetInMilliseconds=getTimezoneOffsetInMilliseconds;var _index=require(\"../toDate.js\");/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */function getTimezoneOffsetInMilliseconds(date){const _date=(0,_index.toDate)(date);const utcDate=new Date(Date.UTC(_date.getFullYear(),_date.getMonth(),_date.getDate(),_date.getHours(),_date.getMinutes(),_date.getSeconds(),_date.getMilliseconds()));utcDate.setUTCFullYear(_date.getFullYear());return+date-+utcDate;}","map":{"version":3,"names":["exports","getTimezoneOffsetInMilliseconds","_index","require","date","_date","toDate","utcDate","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js"],"sourcesContent":["\"use strict\";\nexports.getTimezoneOffsetInMilliseconds = getTimezoneOffsetInMilliseconds;\nvar _index = require(\"../toDate.js\");\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds(date) {\n  const _date = (0, _index.toDate)(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,+BAA+B,CAAGA,+BAA+B,CACzE,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,cAAc,CAAC,CAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,+BAA+BA,CAACG,IAAI,CAAE,CAC7C,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAEH,MAAM,CAACI,MAAM,EAAEF,IAAI,CAAC,CACtC,KAAM,CAAAG,OAAO,CAAG,GAAI,CAAAC,IAAI,CACtBA,IAAI,CAACC,GAAG,CACNJ,KAAK,CAACK,WAAW,CAAC,CAAC,CACnBL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAChBN,KAAK,CAACO,OAAO,CAAC,CAAC,CACfP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAChBR,KAAK,CAACS,UAAU,CAAC,CAAC,CAClBT,KAAK,CAACU,UAAU,CAAC,CAAC,CAClBV,KAAK,CAACW,eAAe,CAAC,CACxB,CACF,CAAC,CACDT,OAAO,CAACU,cAAc,CAACZ,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,CAC3C,MAAO,CAACN,IAAI,CAAG,CAACG,OAAO,CACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
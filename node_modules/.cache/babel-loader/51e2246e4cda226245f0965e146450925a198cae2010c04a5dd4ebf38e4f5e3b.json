{"ast":null,"code":"\"use strict\";exports.startOfWeek=startOfWeek;var _index=require(\"./toDate.js\");var _index2=require(\"./_lib/defaultOptions.js\");/**\n * The {@link startOfWeek} function options.\n */ /**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */function startOfWeek(date,options){var _ref,_ref2,_ref3,_options$weekStartsOn,_options$locale,_options$locale$optio,_defaultOptions$local,_defaultOptions$local2;const defaultOptions=(0,_index2.getDefaultOptions)();const weekStartsOn=(_ref=(_ref2=(_ref3=(_options$weekStartsOn=options===null||options===void 0?void 0:options.weekStartsOn)!==null&&_options$weekStartsOn!==void 0?_options$weekStartsOn:options===null||options===void 0?void 0:(_options$locale=options.locale)===null||_options$locale===void 0?void 0:(_options$locale$optio=_options$locale.options)===null||_options$locale$optio===void 0?void 0:_options$locale$optio.weekStartsOn)!==null&&_ref3!==void 0?_ref3:defaultOptions.weekStartsOn)!==null&&_ref2!==void 0?_ref2:(_defaultOptions$local=defaultOptions.locale)===null||_defaultOptions$local===void 0?void 0:(_defaultOptions$local2=_defaultOptions$local.options)===null||_defaultOptions$local2===void 0?void 0:_defaultOptions$local2.weekStartsOn)!==null&&_ref!==void 0?_ref:0;const _date=(0,_index.toDate)(date);const day=_date.getDay();const diff=(day<weekStartsOn?7:0)+day-weekStartsOn;_date.setDate(_date.getDate()-diff);_date.setHours(0,0,0,0);return _date;}","map":{"version":3,"names":["exports","startOfWeek","_index","require","_index2","date","options","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","getDefaultOptions","weekStartsOn","locale","_date","toDate","day","getDay","diff","setDate","getDate","setHours"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/startOfWeek.js"],"sourcesContent":["\"use strict\";\nexports.startOfWeek = startOfWeek;\nvar _index = require(\"./toDate.js\");\n\nvar _index2 = require(\"./_lib/defaultOptions.js\");\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek(date, options) {\n  const defaultOptions = (0, _index2.getDefaultOptions)();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = (0, _index.toDate)(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,WAAW,CAAGA,WAAW,CACjC,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,aAAa,CAAC,CAEnC,GAAI,CAAAC,OAAO,CAAGD,OAAO,CAAC,0BAA0B,CAAC,CAEjD;AACA;AACA,GAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,WAAWA,CAACI,IAAI,CAAEC,OAAO,CAAE,KAAAC,IAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAC,qBAAA,CAAAC,eAAA,CAAAC,qBAAA,CAAAC,qBAAA,CAAAC,sBAAA,CAClC,KAAM,CAAAC,cAAc,CAAG,CAAC,CAAC,CAAEX,OAAO,CAACY,iBAAiB,EAAE,CAAC,CACvD,KAAM,CAAAC,YAAY,EAAAV,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,CAChBJ,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEW,YAAY,UAAAP,qBAAA,UAAAA,qBAAA,CACrBJ,OAAO,SAAPA,OAAO,kBAAAK,eAAA,CAAPL,OAAO,CAAEY,MAAM,UAAAP,eAAA,kBAAAC,qBAAA,CAAfD,eAAA,CAAiBL,OAAO,UAAAM,qBAAA,iBAAxBA,qBAAA,CAA0BK,YAAY,UAAAR,KAAA,UAAAA,KAAA,CACtCM,cAAc,CAACE,YAAY,UAAAT,KAAA,UAAAA,KAAA,EAAAK,qBAAA,CAC3BE,cAAc,CAACG,MAAM,UAAAL,qBAAA,kBAAAC,sBAAA,CAArBD,qBAAA,CAAuBP,OAAO,UAAAQ,sBAAA,iBAA9BA,sBAAA,CAAgCG,YAAY,UAAAV,IAAA,UAAAA,IAAA,CAC5C,CAAC,CAEH,KAAM,CAAAY,KAAK,CAAG,CAAC,CAAC,CAAEjB,MAAM,CAACkB,MAAM,EAAEf,IAAI,CAAC,CACtC,KAAM,CAAAgB,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAC1B,KAAM,CAAAC,IAAI,CAAG,CAACF,GAAG,CAAGJ,YAAY,CAAG,CAAC,CAAG,CAAC,EAAII,GAAG,CAAGJ,YAAY,CAE9DE,KAAK,CAACK,OAAO,CAACL,KAAK,CAACM,OAAO,CAAC,CAAC,CAAGF,IAAI,CAAC,CACrCJ,KAAK,CAACO,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC1B,MAAO,CAAAP,KAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
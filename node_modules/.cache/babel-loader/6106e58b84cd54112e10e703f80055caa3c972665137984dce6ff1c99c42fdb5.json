{"ast":null,"code":"\"use strict\";exports.localize=void 0;var _index=require(\"../../_lib/buildLocalizeFn.js\");const eraValues={narrow:[\"B\",\"A\"],abbreviated:[\"BC\",\"AD\"],wide:[\"Before Christ\",\"Anno Domini\"]};const quarterValues={narrow:[\"1\",\"2\",\"3\",\"4\"],abbreviated:[\"Q1\",\"Q2\",\"Q3\",\"Q4\"],wide:[\"1st quarter\",\"2nd quarter\",\"3rd quarter\",\"4th quarter\"]};// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues={narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],abbreviated:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],wide:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]};const dayValues={narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],abbreviated:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],wide:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]};const dayPeriodValues={narrow:{am:\"a\",pm:\"p\",midnight:\"mi\",noon:\"n\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"},abbreviated:{am:\"AM\",pm:\"PM\",midnight:\"midnight\",noon:\"noon\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"},wide:{am:\"a.m.\",pm:\"p.m.\",midnight:\"midnight\",noon:\"noon\",morning:\"morning\",afternoon:\"afternoon\",evening:\"evening\",night:\"night\"}};const formattingDayPeriodValues={narrow:{am:\"a\",pm:\"p\",midnight:\"mi\",noon:\"n\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"},abbreviated:{am:\"AM\",pm:\"PM\",midnight:\"midnight\",noon:\"noon\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"},wide:{am:\"a.m.\",pm:\"p.m.\",midnight:\"midnight\",noon:\"noon\",morning:\"in the morning\",afternoon:\"in the afternoon\",evening:\"in the evening\",night:\"at night\"}};const ordinalNumber=(dirtyNumber,_options)=>{const number=Number(dirtyNumber);// If ordinal numbers depend on context, for example,\n// if they are different for different grammatical genders,\n// use `options.unit`.\n//\n// `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n// 'day', 'hour', 'minute', 'second'.\nconst rem100=number%100;if(rem100>20||rem100<10){switch(rem100%10){case 1:return number+\"st\";case 2:return number+\"nd\";case 3:return number+\"rd\";}}return number+\"th\";};const localize=exports.localize={ordinalNumber,era:(0,_index.buildLocalizeFn)({values:eraValues,defaultWidth:\"wide\"}),quarter:(0,_index.buildLocalizeFn)({values:quarterValues,defaultWidth:\"wide\",argumentCallback:quarter=>quarter-1}),month:(0,_index.buildLocalizeFn)({values:monthValues,defaultWidth:\"wide\"}),day:(0,_index.buildLocalizeFn)({values:dayValues,defaultWidth:\"wide\"}),dayPeriod:(0,_index.buildLocalizeFn)({values:dayPeriodValues,defaultWidth:\"wide\",formattingValues:formattingDayPeriodValues,defaultFormattingWidth:\"wide\"})};","map":{"version":3,"names":["exports","localize","_index","require","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","short","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","buildLocalizeFn","values","defaultWidth","quarter","argumentCallback","month","day","dayPeriod","formattingValues","defaultFormattingWidth"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/locale/en-US/_lib/localize.js"],"sourcesContent":["\"use strict\";\nexports.localize = void 0;\nvar _index = require(\"../../_lib/buildLocalizeFn.js\");\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nconst localize = (exports.localize = {\n  ordinalNumber,\n\n  era: (0, _index.buildLocalizeFn)({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: (0, _index.buildLocalizeFn)({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: (0, _index.buildLocalizeFn)({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: (0, _index.buildLocalizeFn)({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: (0, _index.buildLocalizeFn)({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
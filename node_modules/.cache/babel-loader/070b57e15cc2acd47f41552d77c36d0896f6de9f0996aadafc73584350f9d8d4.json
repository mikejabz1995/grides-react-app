{"ast":null,"code":"\"use strict\";exports.formatDistance=void 0;const formatDistanceLocale={lessThanXSeconds:{one:\"less than a second\",other:\"less than {{count}} seconds\"},xSeconds:{one:\"1 second\",other:\"{{count}} seconds\"},halfAMinute:\"half a minute\",lessThanXMinutes:{one:\"less than a minute\",other:\"less than {{count}} minutes\"},xMinutes:{one:\"1 minute\",other:\"{{count}} minutes\"},aboutXHours:{one:\"about 1 hour\",other:\"about {{count}} hours\"},xHours:{one:\"1 hour\",other:\"{{count}} hours\"},xDays:{one:\"1 day\",other:\"{{count}} days\"},aboutXWeeks:{one:\"about 1 week\",other:\"about {{count}} weeks\"},xWeeks:{one:\"1 week\",other:\"{{count}} weeks\"},aboutXMonths:{one:\"about 1 month\",other:\"about {{count}} months\"},xMonths:{one:\"1 month\",other:\"{{count}} months\"},aboutXYears:{one:\"about 1 year\",other:\"about {{count}} years\"},xYears:{one:\"1 year\",other:\"{{count}} years\"},overXYears:{one:\"over 1 year\",other:\"over {{count}} years\"},almostXYears:{one:\"almost 1 year\",other:\"almost {{count}} years\"}};const formatDistance=(token,count,options)=>{let result;const tokenValue=formatDistanceLocale[token];if(typeof tokenValue===\"string\"){result=tokenValue;}else if(count===1){result=tokenValue.one;}else{result=tokenValue.other.replace(\"{{count}}\",count.toString());}if(options!==null&&options!==void 0&&options.addSuffix){if(options.comparison&&options.comparison>0){return\"in \"+result;}else{return result+\" ago\";}}return result;};exports.formatDistance=formatDistance;","map":{"version":3,"names":["exports","formatDistance","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","options","result","tokenValue","replace","toString","addSuffix","comparison"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/locale/en-US/_lib/formatDistance.js"],"sourcesContent":["\"use strict\";\nexports.formatDistance = void 0;\n\nconst formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nconst formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\nexports.formatDistance = formatDistance;\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,cAAc,CAAG,IAAK,EAAC,CAE/B,KAAM,CAAAC,oBAAoB,CAAG,CAC3BC,gBAAgB,CAAE,CAChBC,GAAG,CAAE,oBAAoB,CACzBC,KAAK,CAAE,6BACT,CAAC,CAEDC,QAAQ,CAAE,CACRF,GAAG,CAAE,UAAU,CACfC,KAAK,CAAE,mBACT,CAAC,CAEDE,WAAW,CAAE,eAAe,CAE5BC,gBAAgB,CAAE,CAChBJ,GAAG,CAAE,oBAAoB,CACzBC,KAAK,CAAE,6BACT,CAAC,CAEDI,QAAQ,CAAE,CACRL,GAAG,CAAE,UAAU,CACfC,KAAK,CAAE,mBACT,CAAC,CAEDK,WAAW,CAAE,CACXN,GAAG,CAAE,cAAc,CACnBC,KAAK,CAAE,uBACT,CAAC,CAEDM,MAAM,CAAE,CACNP,GAAG,CAAE,QAAQ,CACbC,KAAK,CAAE,iBACT,CAAC,CAEDO,KAAK,CAAE,CACLR,GAAG,CAAE,OAAO,CACZC,KAAK,CAAE,gBACT,CAAC,CAEDQ,WAAW,CAAE,CACXT,GAAG,CAAE,cAAc,CACnBC,KAAK,CAAE,uBACT,CAAC,CAEDS,MAAM,CAAE,CACNV,GAAG,CAAE,QAAQ,CACbC,KAAK,CAAE,iBACT,CAAC,CAEDU,YAAY,CAAE,CACZX,GAAG,CAAE,eAAe,CACpBC,KAAK,CAAE,wBACT,CAAC,CAEDW,OAAO,CAAE,CACPZ,GAAG,CAAE,SAAS,CACdC,KAAK,CAAE,kBACT,CAAC,CAEDY,WAAW,CAAE,CACXb,GAAG,CAAE,cAAc,CACnBC,KAAK,CAAE,uBACT,CAAC,CAEDa,MAAM,CAAE,CACNd,GAAG,CAAE,QAAQ,CACbC,KAAK,CAAE,iBACT,CAAC,CAEDc,UAAU,CAAE,CACVf,GAAG,CAAE,aAAa,CAClBC,KAAK,CAAE,sBACT,CAAC,CAEDe,YAAY,CAAE,CACZhB,GAAG,CAAE,eAAe,CACpBC,KAAK,CAAE,wBACT,CACF,CAAC,CAED,KAAM,CAAAJ,cAAc,CAAGA,CAACoB,KAAK,CAAEC,KAAK,CAAEC,OAAO,GAAK,CAChD,GAAI,CAAAC,MAAM,CAEV,KAAM,CAAAC,UAAU,CAAGvB,oBAAoB,CAACmB,KAAK,CAAC,CAC9C,GAAI,MAAO,CAAAI,UAAU,GAAK,QAAQ,CAAE,CAClCD,MAAM,CAAGC,UAAU,CACrB,CAAC,IAAM,IAAIH,KAAK,GAAK,CAAC,CAAE,CACtBE,MAAM,CAAGC,UAAU,CAACrB,GAAG,CACzB,CAAC,IAAM,CACLoB,MAAM,CAAGC,UAAU,CAACpB,KAAK,CAACqB,OAAO,CAAC,WAAW,CAAEJ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAClE,CAEA,GAAIJ,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAEK,SAAS,CAAE,CACtB,GAAIL,OAAO,CAACM,UAAU,EAAIN,OAAO,CAACM,UAAU,CAAG,CAAC,CAAE,CAChD,MAAO,KAAK,CAAGL,MAAM,CACvB,CAAC,IAAM,CACL,MAAO,CAAAA,MAAM,CAAG,MAAM,CACxB,CACF,CAEA,MAAO,CAAAA,MAAM,CACf,CAAC,CACDxB,OAAO,CAACC,cAAc,CAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
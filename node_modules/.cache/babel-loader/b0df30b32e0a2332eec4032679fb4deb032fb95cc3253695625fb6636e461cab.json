{"ast":null,"code":"/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */const sides=['top','right','bottom','left'];const alignments=['start','end'];const placements=/*#__PURE__*/sides.reduce((acc,side)=>acc.concat(side,side+\"-\"+alignments[0],side+\"-\"+alignments[1]),[]);const min=Math.min;const max=Math.max;const round=Math.round;const floor=Math.floor;const createCoords=v=>({x:v,y:v});const oppositeSideMap={left:'right',right:'left',bottom:'top',top:'bottom'};const oppositeAlignmentMap={start:'end',end:'start'};function clamp(start,value,end){return max(start,min(value,end));}function evaluate(value,param){return typeof value==='function'?value(param):value;}function getSide(placement){return placement.split('-')[0];}function getAlignment(placement){return placement.split('-')[1];}function getOppositeAxis(axis){return axis==='x'?'y':'x';}function getAxisLength(axis){return axis==='y'?'height':'width';}function getSideAxis(placement){return['top','bottom'].includes(getSide(placement))?'y':'x';}function getAlignmentAxis(placement){return getOppositeAxis(getSideAxis(placement));}function getAlignmentSides(placement,rects,rtl){if(rtl===void 0){rtl=false;}const alignment=getAlignment(placement);const alignmentAxis=getAlignmentAxis(placement);const length=getAxisLength(alignmentAxis);let mainAlignmentSide=alignmentAxis==='x'?alignment===(rtl?'end':'start')?'right':'left':alignment==='start'?'bottom':'top';if(rects.reference[length]>rects.floating[length]){mainAlignmentSide=getOppositePlacement(mainAlignmentSide);}return[mainAlignmentSide,getOppositePlacement(mainAlignmentSide)];}function getExpandedPlacements(placement){const oppositePlacement=getOppositePlacement(placement);return[getOppositeAlignmentPlacement(placement),oppositePlacement,getOppositeAlignmentPlacement(oppositePlacement)];}function getOppositeAlignmentPlacement(placement){return placement.replace(/start|end/g,alignment=>oppositeAlignmentMap[alignment]);}function getSideList(side,isStart,rtl){const lr=['left','right'];const rl=['right','left'];const tb=['top','bottom'];const bt=['bottom','top'];switch(side){case'top':case'bottom':if(rtl)return isStart?rl:lr;return isStart?lr:rl;case'left':case'right':return isStart?tb:bt;default:return[];}}function getOppositeAxisPlacements(placement,flipAlignment,direction,rtl){const alignment=getAlignment(placement);let list=getSideList(getSide(placement),direction==='start',rtl);if(alignment){list=list.map(side=>side+\"-\"+alignment);if(flipAlignment){list=list.concat(list.map(getOppositeAlignmentPlacement));}}return list;}function getOppositePlacement(placement){return placement.replace(/left|right|bottom|top/g,side=>oppositeSideMap[side]);}function expandPaddingObject(padding){return{top:0,right:0,bottom:0,left:0,...padding};}function getPaddingObject(padding){return typeof padding!=='number'?expandPaddingObject(padding):{top:padding,right:padding,bottom:padding,left:padding};}function rectToClientRect(rect){return{...rect,top:rect.y,left:rect.x,right:rect.x+rect.width,bottom:rect.y+rect.height};}export{alignments,clamp,createCoords,evaluate,expandPaddingObject,floor,getAlignment,getAlignmentAxis,getAlignmentSides,getAxisLength,getExpandedPlacements,getOppositeAlignmentPlacement,getOppositeAxis,getOppositeAxisPlacements,getOppositePlacement,getPaddingObject,getSide,getSideAxis,max,min,placements,rectToClientRect,round,sides};","map":{"version":3,"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getExpandedPlacements","oppositePlacement","getOppositeAlignmentPlacement","replace","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","map","expandPaddingObject","padding","getPaddingObject","rectToClientRect","rect","width","height"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
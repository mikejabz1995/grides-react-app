{"ast":null,"code":"\"use strict\";exports.secondsInYear=exports.secondsInWeek=exports.secondsInQuarter=exports.secondsInMonth=exports.secondsInMinute=exports.secondsInHour=exports.secondsInDay=exports.quartersInYear=exports.monthsInYear=exports.monthsInQuarter=exports.minutesInYear=exports.minutesInMonth=exports.minutesInHour=exports.minutesInDay=exports.minTime=exports.millisecondsInWeek=exports.millisecondsInSecond=exports.millisecondsInMinute=exports.millisecondsInHour=exports.millisecondsInDay=exports.maxTime=exports.daysInYear=exports.daysInWeek=void 0;/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */ /**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */const daysInWeek=exports.daysInWeek=7;/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */const daysInYear=exports.daysInYear=365.2425;/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */const maxTime=exports.maxTime=Math.pow(10,8)*24*60*60*1000;/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */const minTime=exports.minTime=-maxTime;/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */const millisecondsInWeek=exports.millisecondsInWeek=604800000;/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */const millisecondsInDay=exports.millisecondsInDay=86400000;/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */const millisecondsInMinute=exports.millisecondsInMinute=60000;/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */const millisecondsInHour=exports.millisecondsInHour=3600000;/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */const millisecondsInSecond=exports.millisecondsInSecond=1000;/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */const minutesInYear=exports.minutesInYear=525600;/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */const minutesInMonth=exports.minutesInMonth=43200;/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */const minutesInDay=exports.minutesInDay=1440;/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */const minutesInHour=exports.minutesInHour=60;/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */const monthsInQuarter=exports.monthsInQuarter=3;/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */const monthsInYear=exports.monthsInYear=12;/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */const quartersInYear=exports.quartersInYear=4;/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */const secondsInHour=exports.secondsInHour=3600;/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */const secondsInMinute=exports.secondsInMinute=60;/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */const secondsInDay=exports.secondsInDay=secondsInHour*24;/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */const secondsInWeek=exports.secondsInWeek=secondsInDay*7;/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */const secondsInYear=exports.secondsInYear=secondsInDay*daysInYear;/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */const secondsInMonth=exports.secondsInMonth=secondsInYear/12;/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */const secondsInQuarter=exports.secondsInQuarter=secondsInMonth*3;","map":{"version":3,"names":["exports","secondsInYear","secondsInWeek","secondsInQuarter","secondsInMonth","secondsInMinute","secondsInHour","secondsInDay","quartersInYear","monthsInYear","monthsInQuarter","minutesInYear","minutesInMonth","minutesInHour","minutesInDay","minTime","millisecondsInWeek","millisecondsInSecond","millisecondsInMinute","millisecondsInHour","millisecondsInDay","maxTime","daysInYear","daysInWeek","Math","pow"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/constants.js"],"sourcesContent":["\"use strict\";\nexports.secondsInYear =\n  exports.secondsInWeek =\n  exports.secondsInQuarter =\n  exports.secondsInMonth =\n  exports.secondsInMinute =\n  exports.secondsInHour =\n  exports.secondsInDay =\n  exports.quartersInYear =\n  exports.monthsInYear =\n  exports.monthsInQuarter =\n  exports.minutesInYear =\n  exports.minutesInMonth =\n  exports.minutesInHour =\n  exports.minutesInDay =\n  exports.minTime =\n  exports.millisecondsInWeek =\n  exports.millisecondsInSecond =\n  exports.millisecondsInMinute =\n  exports.millisecondsInHour =\n  exports.millisecondsInDay =\n  exports.maxTime =\n  exports.daysInYear =\n  exports.daysInWeek =\n    void 0; /**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nconst daysInWeek = (exports.daysInWeek = 7);\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nconst daysInYear = (exports.daysInYear = 365.2425);\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nconst maxTime = (exports.maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000);\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nconst minTime = (exports.minTime = -maxTime);\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nconst millisecondsInWeek = (exports.millisecondsInWeek = 604800000);\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nconst millisecondsInDay = (exports.millisecondsInDay = 86400000);\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nconst millisecondsInMinute = (exports.millisecondsInMinute = 60000);\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nconst millisecondsInHour = (exports.millisecondsInHour = 3600000);\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nconst millisecondsInSecond = (exports.millisecondsInSecond = 1000);\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nconst minutesInYear = (exports.minutesInYear = 525600);\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nconst minutesInMonth = (exports.minutesInMonth = 43200);\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nconst minutesInDay = (exports.minutesInDay = 1440);\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nconst minutesInHour = (exports.minutesInHour = 60);\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nconst monthsInQuarter = (exports.monthsInQuarter = 3);\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nconst monthsInYear = (exports.monthsInYear = 12);\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nconst quartersInYear = (exports.quartersInYear = 4);\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nconst secondsInHour = (exports.secondsInHour = 3600);\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nconst secondsInMinute = (exports.secondsInMinute = 60);\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nconst secondsInDay = (exports.secondsInDay = secondsInHour * 24);\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nconst secondsInWeek = (exports.secondsInWeek = secondsInDay * 7);\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nconst secondsInYear = (exports.secondsInYear = secondsInDay * daysInYear);\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nconst secondsInMonth = (exports.secondsInMonth = secondsInYear / 12);\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nconst secondsInQuarter = (exports.secondsInQuarter = secondsInMonth * 3);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";exports.max=max;var _index=require(\"./toDate.js\");/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dates - The dates to compare\n *\n * @returns The latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */function max(dates){let result;dates.forEach(function(dirtyDate){const currentDate=(0,_index.toDate)(dirtyDate);if(result===undefined||result<currentDate||isNaN(Number(currentDate))){result=currentDate;}});return result||new Date(NaN);}","map":{"version":3,"names":["exports","max","_index","require","dates","result","forEach","dirtyDate","currentDate","toDate","undefined","isNaN","Number","Date","NaN"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/max.js"],"sourcesContent":["\"use strict\";\nexports.max = max;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dates - The dates to compare\n *\n * @returns The latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\nfunction max(dates) {\n  let result;\n  dates.forEach(function (dirtyDate) {\n    const currentDate = (0, _index.toDate)(dirtyDate);\n\n    if (\n      result === undefined ||\n      result < currentDate ||\n      isNaN(Number(currentDate))\n    ) {\n      result = currentDate;\n    }\n  });\n\n  return result || new Date(NaN);\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,GAAG,CAAGA,GAAG,CACjB,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,aAAa,CAAC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,GAAGA,CAACG,KAAK,CAAE,CAClB,GAAI,CAAAC,MAAM,CACVD,KAAK,CAACE,OAAO,CAAC,SAAUC,SAAS,CAAE,CACjC,KAAM,CAAAC,WAAW,CAAG,CAAC,CAAC,CAAEN,MAAM,CAACO,MAAM,EAAEF,SAAS,CAAC,CAEjD,GACEF,MAAM,GAAKK,SAAS,EACpBL,MAAM,CAAGG,WAAW,EACpBG,KAAK,CAACC,MAAM,CAACJ,WAAW,CAAC,CAAC,CAC1B,CACAH,MAAM,CAAGG,WAAW,CACtB,CACF,CAAC,CAAC,CAEF,MAAO,CAAAH,MAAM,EAAI,GAAI,CAAAQ,IAAI,CAACC,GAAG,CAAC,CAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";exports.getWeekYear=getWeekYear;var _index=require(\"./constructFrom.js\");var _index2=require(\"./startOfWeek.js\");var _index3=require(\"./toDate.js\");var _index4=require(\"./_lib/defaultOptions.js\");/**\n * The {@link getWeekYear} function options.\n */ /**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */function getWeekYear(date,options){var _ref,_ref2,_ref3,_options$firstWeekCon,_options$locale,_options$locale$optio,_defaultOptions$local,_defaultOptions$local2;const _date=(0,_index3.toDate)(date);const year=_date.getFullYear();const defaultOptions=(0,_index4.getDefaultOptions)();const firstWeekContainsDate=(_ref=(_ref2=(_ref3=(_options$firstWeekCon=options===null||options===void 0?void 0:options.firstWeekContainsDate)!==null&&_options$firstWeekCon!==void 0?_options$firstWeekCon:options===null||options===void 0?void 0:(_options$locale=options.locale)===null||_options$locale===void 0?void 0:(_options$locale$optio=_options$locale.options)===null||_options$locale$optio===void 0?void 0:_options$locale$optio.firstWeekContainsDate)!==null&&_ref3!==void 0?_ref3:defaultOptions.firstWeekContainsDate)!==null&&_ref2!==void 0?_ref2:(_defaultOptions$local=defaultOptions.locale)===null||_defaultOptions$local===void 0?void 0:(_defaultOptions$local2=_defaultOptions$local.options)===null||_defaultOptions$local2===void 0?void 0:_defaultOptions$local2.firstWeekContainsDate)!==null&&_ref!==void 0?_ref:1;const firstWeekOfNextYear=(0,_index.constructFrom)(date,0);firstWeekOfNextYear.setFullYear(year+1,0,firstWeekContainsDate);firstWeekOfNextYear.setHours(0,0,0,0);const startOfNextYear=(0,_index2.startOfWeek)(firstWeekOfNextYear,options);const firstWeekOfThisYear=(0,_index.constructFrom)(date,0);firstWeekOfThisYear.setFullYear(year,0,firstWeekContainsDate);firstWeekOfThisYear.setHours(0,0,0,0);const startOfThisYear=(0,_index2.startOfWeek)(firstWeekOfThisYear,options);if(_date.getTime()>=startOfNextYear.getTime()){return year+1;}else if(_date.getTime()>=startOfThisYear.getTime()){return year;}else{return year-1;}}","map":{"version":3,"names":["exports","getWeekYear","_index","require","_index2","_index3","_index4","date","options","_ref","_ref2","_ref3","_options$firstWeekCon","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","_date","toDate","year","getFullYear","defaultOptions","getDefaultOptions","firstWeekContainsDate","locale","firstWeekOfNextYear","constructFrom","setFullYear","setHours","startOfNextYear","startOfWeek","firstWeekOfThisYear","startOfThisYear","getTime"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/getWeekYear.js"],"sourcesContent":["\"use strict\";\nexports.getWeekYear = getWeekYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./startOfWeek.js\");\nvar _index3 = require(\"./toDate.js\");\n\nvar _index4 = require(\"./_lib/defaultOptions.js\");\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nfunction getWeekYear(date, options) {\n  const _date = (0, _index3.toDate)(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = (0, _index4.getDefaultOptions)();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = (0, _index.constructFrom)(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = (0, _index2.startOfWeek)(\n    firstWeekOfNextYear,\n    options,\n  );\n\n  const firstWeekOfThisYear = (0, _index.constructFrom)(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = (0, _index2.startOfWeek)(\n    firstWeekOfThisYear,\n    options,\n  );\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
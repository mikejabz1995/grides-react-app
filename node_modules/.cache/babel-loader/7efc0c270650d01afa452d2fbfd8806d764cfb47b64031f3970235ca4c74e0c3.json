{"ast":null,"code":"\"use strict\";exports.startOfWeekYear=startOfWeekYear;var _index=require(\"./constructFrom.js\");var _index2=require(\"./getWeekYear.js\");var _index3=require(\"./startOfWeek.js\");var _index4=require(\"./_lib/defaultOptions.js\");/**\n * The {@link startOfWeekYear} function options.\n */ /**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */function startOfWeekYear(date,options){var _ref,_ref2,_ref3,_options$firstWeekCon,_options$locale,_options$locale$optio,_defaultOptions$local,_defaultOptions$local2;const defaultOptions=(0,_index4.getDefaultOptions)();const firstWeekContainsDate=(_ref=(_ref2=(_ref3=(_options$firstWeekCon=options===null||options===void 0?void 0:options.firstWeekContainsDate)!==null&&_options$firstWeekCon!==void 0?_options$firstWeekCon:options===null||options===void 0?void 0:(_options$locale=options.locale)===null||_options$locale===void 0?void 0:(_options$locale$optio=_options$locale.options)===null||_options$locale$optio===void 0?void 0:_options$locale$optio.firstWeekContainsDate)!==null&&_ref3!==void 0?_ref3:defaultOptions.firstWeekContainsDate)!==null&&_ref2!==void 0?_ref2:(_defaultOptions$local=defaultOptions.locale)===null||_defaultOptions$local===void 0?void 0:(_defaultOptions$local2=_defaultOptions$local.options)===null||_defaultOptions$local2===void 0?void 0:_defaultOptions$local2.firstWeekContainsDate)!==null&&_ref!==void 0?_ref:1;const year=(0,_index2.getWeekYear)(date,options);const firstWeek=(0,_index.constructFrom)(date,0);firstWeek.setFullYear(year,0,firstWeekContainsDate);firstWeek.setHours(0,0,0,0);const _date=(0,_index3.startOfWeek)(firstWeek,options);return _date;}","map":{"version":3,"names":["exports","startOfWeekYear","_index","require","_index2","_index3","_index4","date","options","_ref","_ref2","_ref3","_options$firstWeekCon","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","getDefaultOptions","firstWeekContainsDate","locale","year","getWeekYear","firstWeek","constructFrom","setFullYear","setHours","_date","startOfWeek"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/startOfWeekYear.js"],"sourcesContent":["\"use strict\";\nexports.startOfWeekYear = startOfWeekYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./getWeekYear.js\");\nvar _index3 = require(\"./startOfWeek.js\");\n\nvar _index4 = require(\"./_lib/defaultOptions.js\");\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfWeekYear(date, options) {\n  const defaultOptions = (0, _index4.getDefaultOptions)();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = (0, _index2.getWeekYear)(date, options);\n  const firstWeek = (0, _index.constructFrom)(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = (0, _index3.startOfWeek)(firstWeek, options);\n  return _date;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,eAAe,CAAGA,eAAe,CACzC,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,oBAAoB,CAAC,CAC1C,GAAI,CAAAC,OAAO,CAAGD,OAAO,CAAC,kBAAkB,CAAC,CACzC,GAAI,CAAAE,OAAO,CAAGF,OAAO,CAAC,kBAAkB,CAAC,CAEzC,GAAI,CAAAG,OAAO,CAAGH,OAAO,CAAC,0BAA0B,CAAC,CAEjD;AACA;AACA,GAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,eAAeA,CAACM,IAAI,CAAEC,OAAO,CAAE,KAAAC,IAAA,CAAAC,KAAA,CAAAC,KAAA,CAAAC,qBAAA,CAAAC,eAAA,CAAAC,qBAAA,CAAAC,qBAAA,CAAAC,sBAAA,CACtC,KAAM,CAAAC,cAAc,CAAG,CAAC,CAAC,CAAEX,OAAO,CAACY,iBAAiB,EAAE,CAAC,CACvD,KAAM,CAAAC,qBAAqB,EAAAV,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,CACzBJ,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEW,qBAAqB,UAAAP,qBAAA,UAAAA,qBAAA,CAC9BJ,OAAO,SAAPA,OAAO,kBAAAK,eAAA,CAAPL,OAAO,CAAEY,MAAM,UAAAP,eAAA,kBAAAC,qBAAA,CAAfD,eAAA,CAAiBL,OAAO,UAAAM,qBAAA,iBAAxBA,qBAAA,CAA0BK,qBAAqB,UAAAR,KAAA,UAAAA,KAAA,CAC/CM,cAAc,CAACE,qBAAqB,UAAAT,KAAA,UAAAA,KAAA,EAAAK,qBAAA,CACpCE,cAAc,CAACG,MAAM,UAAAL,qBAAA,kBAAAC,sBAAA,CAArBD,qBAAA,CAAuBP,OAAO,UAAAQ,sBAAA,iBAA9BA,sBAAA,CAAgCG,qBAAqB,UAAAV,IAAA,UAAAA,IAAA,CACrD,CAAC,CAEH,KAAM,CAAAY,IAAI,CAAG,CAAC,CAAC,CAAEjB,OAAO,CAACkB,WAAW,EAAEf,IAAI,CAAEC,OAAO,CAAC,CACpD,KAAM,CAAAe,SAAS,CAAG,CAAC,CAAC,CAAErB,MAAM,CAACsB,aAAa,EAAEjB,IAAI,CAAE,CAAC,CAAC,CACpDgB,SAAS,CAACE,WAAW,CAACJ,IAAI,CAAE,CAAC,CAAEF,qBAAqB,CAAC,CACrDI,SAAS,CAACG,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC9B,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAEtB,OAAO,CAACuB,WAAW,EAAEL,SAAS,CAAEf,OAAO,CAAC,CAC1D,MAAO,CAAAmB,KAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
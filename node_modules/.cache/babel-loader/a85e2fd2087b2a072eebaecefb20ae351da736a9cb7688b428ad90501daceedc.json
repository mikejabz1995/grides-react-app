{"ast":null,"code":"var _jsxFileName = \"/Users/mikejabrhamdan/grides-react-app/src/components/Step2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Step2 = () => {\n  _s();\n  const [vehicles, setVehicles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const step2Data = JSON.parse(localStorage.getItem('step2Data'));\n\n        // Extracting data from step2Data\n        const {\n          pickupDateTime,\n          returnDateTime,\n          selectedLocation\n        } = step2Data;\n        const requestBody = {\n          date_from: pickupDateTime,\n          // Use pickupDateTime as date_from\n          date_to: returnDateTime,\n          // Use returnDateTime as date_to\n          pickup_location: selectedLocation,\n          // Use selectedLocation as both pickup_location and return_location\n          return_location: selectedLocation\n        };\n        const response = await axios.post('https://api.example.com/v2/vehicles/search', requestBody);\n        setVehicles(response.data);\n      } catch (error) {\n        console.error('Error fetching vehicles:', error);\n        setError('Failed to fetch vehicles');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: vehicles.map(vehicle => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: vehicle.name\n      }, vehicle.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Step2, \"gogqKFQHRH0QRHxrh6n8o+Hep6o=\");\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Step2","_s","vehicles","setVehicles","loading","setLoading","error","setError","fetchData","step2Data","JSON","parse","localStorage","getItem","pickupDateTime","returnDateTime","selectedLocation","requestBody","date_from","date_to","pickup_location","return_location","response","post","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","vehicle","name","id","_c","$RefreshReg$"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/components/Step2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Step2 = () => {\n  const [vehicles, setVehicles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const step2Data = JSON.parse(localStorage.getItem('step2Data'));\n\n        // Extracting data from step2Data\n        const { pickupDateTime, returnDateTime, selectedLocation } = step2Data;\n\n        const requestBody = {\n          date_from: pickupDateTime, // Use pickupDateTime as date_from\n          date_to: returnDateTime, // Use returnDateTime as date_to\n          pickup_location: selectedLocation, // Use selectedLocation as both pickup_location and return_location\n          return_location: selectedLocation,\n        };\n\n        const response = await axios.post('https://api.example.com/v2/vehicles/search', requestBody);\n        setVehicles(response.data);\n      } catch (error) {\n        console.error('Error fetching vehicles:', error);\n        setError('Failed to fetch vehicles');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {loading && <div>Loading...</div>}\n      {error && <div>Error: {error}</div>}\n      <ul>\n        {vehicles.map(vehicle => (\n          <li key={vehicle.id}>{vehicle.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Step2;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;;QAE/D;QACA,MAAM;UAAEC,cAAc;UAAEC,cAAc;UAAEC;QAAiB,CAAC,GAAGP,SAAS;QAEtE,MAAMQ,WAAW,GAAG;UAClBC,SAAS,EAAEJ,cAAc;UAAE;UAC3BK,OAAO,EAAEJ,cAAc;UAAE;UACzBK,eAAe,EAAEJ,gBAAgB;UAAE;UACnCK,eAAe,EAAEL;QACnB,CAAC;QAED,MAAMM,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,4CAA4C,EAAEN,WAAW,CAAC;QAC5Fd,WAAW,CAACmB,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdmB,OAAO,CAACnB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDC,QAAQ,CAAC,0BAA0B,CAAC;MACtC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAA2B,QAAA,GACGtB,OAAO,iBAAIL,OAAA;MAAA2B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAChCxB,KAAK,iBAAIP,OAAA;MAAA2B,QAAA,GAAK,SAAO,EAACpB,KAAK;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnC/B,OAAA;MAAA2B,QAAA,EACGxB,QAAQ,CAAC6B,GAAG,CAACC,OAAO,iBACnBjC,OAAA;QAAA2B,QAAA,EAAsBM,OAAO,CAACC;MAAI,GAAzBD,OAAO,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA5CID,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
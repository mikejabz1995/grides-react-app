{"ast":null,"code":"\"use strict\";exports.longFormatters=void 0;const dateLongFormatter=(pattern,formatLong)=>{switch(pattern){case\"P\":return formatLong.date({width:\"short\"});case\"PP\":return formatLong.date({width:\"medium\"});case\"PPP\":return formatLong.date({width:\"long\"});case\"PPPP\":default:return formatLong.date({width:\"full\"});}};const timeLongFormatter=(pattern,formatLong)=>{switch(pattern){case\"p\":return formatLong.time({width:\"short\"});case\"pp\":return formatLong.time({width:\"medium\"});case\"ppp\":return formatLong.time({width:\"long\"});case\"pppp\":default:return formatLong.time({width:\"full\"});}};const dateTimeLongFormatter=(pattern,formatLong)=>{const matchResult=pattern.match(/(P+)(p+)?/)||[];const datePattern=matchResult[1];const timePattern=matchResult[2];if(!timePattern){return dateLongFormatter(pattern,formatLong);}let dateTimeFormat;switch(datePattern){case\"P\":dateTimeFormat=formatLong.dateTime({width:\"short\"});break;case\"PP\":dateTimeFormat=formatLong.dateTime({width:\"medium\"});break;case\"PPP\":dateTimeFormat=formatLong.dateTime({width:\"long\"});break;case\"PPPP\":default:dateTimeFormat=formatLong.dateTime({width:\"full\"});break;}return dateTimeFormat.replace(\"{{date}}\",dateLongFormatter(datePattern,formatLong)).replace(\"{{time}}\",timeLongFormatter(timePattern,formatLong));};const longFormatters=exports.longFormatters={p:timeLongFormatter,P:dateTimeLongFormatter};","map":{"version":3,"names":["exports","longFormatters","dateLongFormatter","pattern","formatLong","date","width","timeLongFormatter","time","dateTimeLongFormatter","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","p","P"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/_lib/format/longFormatters.js"],"sourcesContent":["\"use strict\";\nexports.longFormatters = void 0;\n\nconst dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nconst longFormatters = (exports.longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n});\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,cAAc,CAAG,IAAK,EAAC,CAE/B,KAAM,CAAAC,iBAAiB,CAAGA,CAACC,OAAO,CAAEC,UAAU,GAAK,CACjD,OAAQD,OAAO,EACb,IAAK,GAAG,CACN,MAAO,CAAAC,UAAU,CAACC,IAAI,CAAC,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAAC,CAC5C,IAAK,IAAI,CACP,MAAO,CAAAF,UAAU,CAACC,IAAI,CAAC,CAAEC,KAAK,CAAE,QAAS,CAAC,CAAC,CAC7C,IAAK,KAAK,CACR,MAAO,CAAAF,UAAU,CAACC,IAAI,CAAC,CAAEC,KAAK,CAAE,MAAO,CAAC,CAAC,CAC3C,IAAK,MAAM,CACX,QACE,MAAO,CAAAF,UAAU,CAACC,IAAI,CAAC,CAAEC,KAAK,CAAE,MAAO,CAAC,CAAC,CAC7C,CACF,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAGA,CAACJ,OAAO,CAAEC,UAAU,GAAK,CACjD,OAAQD,OAAO,EACb,IAAK,GAAG,CACN,MAAO,CAAAC,UAAU,CAACI,IAAI,CAAC,CAAEF,KAAK,CAAE,OAAQ,CAAC,CAAC,CAC5C,IAAK,IAAI,CACP,MAAO,CAAAF,UAAU,CAACI,IAAI,CAAC,CAAEF,KAAK,CAAE,QAAS,CAAC,CAAC,CAC7C,IAAK,KAAK,CACR,MAAO,CAAAF,UAAU,CAACI,IAAI,CAAC,CAAEF,KAAK,CAAE,MAAO,CAAC,CAAC,CAC3C,IAAK,MAAM,CACX,QACE,MAAO,CAAAF,UAAU,CAACI,IAAI,CAAC,CAAEF,KAAK,CAAE,MAAO,CAAC,CAAC,CAC7C,CACF,CAAC,CAED,KAAM,CAAAG,qBAAqB,CAAGA,CAACN,OAAO,CAAEC,UAAU,GAAK,CACrD,KAAM,CAAAM,WAAW,CAAGP,OAAO,CAACQ,KAAK,CAAC,WAAW,CAAC,EAAI,EAAE,CACpD,KAAM,CAAAC,WAAW,CAAGF,WAAW,CAAC,CAAC,CAAC,CAClC,KAAM,CAAAG,WAAW,CAAGH,WAAW,CAAC,CAAC,CAAC,CAElC,GAAI,CAACG,WAAW,CAAE,CAChB,MAAO,CAAAX,iBAAiB,CAACC,OAAO,CAAEC,UAAU,CAAC,CAC/C,CAEA,GAAI,CAAAU,cAAc,CAElB,OAAQF,WAAW,EACjB,IAAK,GAAG,CACNE,cAAc,CAAGV,UAAU,CAACW,QAAQ,CAAC,CAAET,KAAK,CAAE,OAAQ,CAAC,CAAC,CACxD,MACF,IAAK,IAAI,CACPQ,cAAc,CAAGV,UAAU,CAACW,QAAQ,CAAC,CAAET,KAAK,CAAE,QAAS,CAAC,CAAC,CACzD,MACF,IAAK,KAAK,CACRQ,cAAc,CAAGV,UAAU,CAACW,QAAQ,CAAC,CAAET,KAAK,CAAE,MAAO,CAAC,CAAC,CACvD,MACF,IAAK,MAAM,CACX,QACEQ,cAAc,CAAGV,UAAU,CAACW,QAAQ,CAAC,CAAET,KAAK,CAAE,MAAO,CAAC,CAAC,CACvD,MACJ,CAEA,MAAO,CAAAQ,cAAc,CAClBE,OAAO,CAAC,UAAU,CAAEd,iBAAiB,CAACU,WAAW,CAAER,UAAU,CAAC,CAAC,CAC/DY,OAAO,CAAC,UAAU,CAAET,iBAAiB,CAACM,WAAW,CAAET,UAAU,CAAC,CAAC,CACpE,CAAC,CAED,KAAM,CAAAH,cAAc,CAAID,OAAO,CAACC,cAAc,CAAG,CAC/CgB,CAAC,CAAEV,iBAAiB,CACpBW,CAAC,CAAET,qBACL,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";exports.lightFormatters=void 0;var _index=require(\"../addLeadingZeros.js\");/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */const lightFormatters=exports.lightFormatters={// Year\ny(date,token){// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nconst signedYear=date.getFullYear();// Returns 1 for 1 BC (which is year 0 in JavaScript)\nconst year=signedYear>0?signedYear:1-signedYear;return(0,_index.addLeadingZeros)(token===\"yy\"?year%100:year,token.length);},// Month\nM(date,token){const month=date.getMonth();return token===\"M\"?String(month+1):(0,_index.addLeadingZeros)(month+1,2);},// Day of the month\nd(date,token){return(0,_index.addLeadingZeros)(date.getDate(),token.length);},// AM or PM\na(date,token){const dayPeriodEnumValue=date.getHours()/12>=1?\"pm\":\"am\";switch(token){case\"a\":case\"aa\":return dayPeriodEnumValue.toUpperCase();case\"aaa\":return dayPeriodEnumValue;case\"aaaaa\":return dayPeriodEnumValue[0];case\"aaaa\":default:return dayPeriodEnumValue===\"am\"?\"a.m.\":\"p.m.\";}},// Hour [1-12]\nh(date,token){return(0,_index.addLeadingZeros)(date.getHours()%12||12,token.length);},// Hour [0-23]\nH(date,token){return(0,_index.addLeadingZeros)(date.getHours(),token.length);},// Minute\nm(date,token){return(0,_index.addLeadingZeros)(date.getMinutes(),token.length);},// Second\ns(date,token){return(0,_index.addLeadingZeros)(date.getSeconds(),token.length);},// Fraction of second\nS(date,token){const numberOfDigits=token.length;const milliseconds=date.getMilliseconds();const fractionalSeconds=Math.trunc(milliseconds*Math.pow(10,numberOfDigits-3));return(0,_index.addLeadingZeros)(fractionalSeconds,token.length);}};","map":{"version":3,"names":["exports","lightFormatters","_index","require","y","date","token","signedYear","getFullYear","year","addLeadingZeros","length","M","month","getMonth","String","d","getDate","a","dayPeriodEnumValue","getHours","toUpperCase","h","H","m","getMinutes","s","getSeconds","S","numberOfDigits","milliseconds","getMilliseconds","fractionalSeconds","Math","trunc","pow"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/_lib/format/lightFormatters.js"],"sourcesContent":["\"use strict\";\nexports.lightFormatters = void 0;\nvar _index = require(\"../addLeadingZeros.js\");\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nconst lightFormatters = (exports.lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return (0, _index.addLeadingZeros)(\n      token === \"yy\" ? year % 100 : year,\n      token.length,\n    );\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\"\n      ? String(month + 1)\n      : (0, _index.addLeadingZeros)(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return (0, _index.addLeadingZeros)(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return (0, _index.addLeadingZeros)(\n      date.getHours() % 12 || 12,\n      token.length,\n    );\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return (0, _index.addLeadingZeros)(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return (0, _index.addLeadingZeros)(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return (0, _index.addLeadingZeros)(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return (0, _index.addLeadingZeros)(fractionalSeconds, token.length);\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
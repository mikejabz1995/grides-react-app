{"ast":null,"code":"\"use strict\";exports.isSameYear=isSameYear;var _index=require(\"./toDate.js\");/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */function isSameYear(dateLeft,dateRight){const _dateLeft=(0,_index.toDate)(dateLeft);const _dateRight=(0,_index.toDate)(dateRight);return _dateLeft.getFullYear()===_dateRight.getFullYear();}","map":{"version":3,"names":["exports","isSameYear","_index","require","dateLeft","dateRight","_dateLeft","toDate","_dateRight","getFullYear"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/isSameYear.js"],"sourcesContent":["\"use strict\";\nexports.isSameYear = isSameYear;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nfunction isSameYear(dateLeft, dateRight) {\n  const _dateLeft = (0, _index.toDate)(dateLeft);\n  const _dateRight = (0, _index.toDate)(dateRight);\n  return _dateLeft.getFullYear() === _dateRight.getFullYear();\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,UAAU,CAAGA,UAAU,CAC/B,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,aAAa,CAAC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,UAAUA,CAACG,QAAQ,CAAEC,SAAS,CAAE,CACvC,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CAAEJ,MAAM,CAACK,MAAM,EAAEH,QAAQ,CAAC,CAC9C,KAAM,CAAAI,UAAU,CAAG,CAAC,CAAC,CAAEN,MAAM,CAACK,MAAM,EAAEF,SAAS,CAAC,CAChD,MAAO,CAAAC,SAAS,CAACG,WAAW,CAAC,CAAC,GAAKD,UAAU,CAACC,WAAW,CAAC,CAAC,CAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
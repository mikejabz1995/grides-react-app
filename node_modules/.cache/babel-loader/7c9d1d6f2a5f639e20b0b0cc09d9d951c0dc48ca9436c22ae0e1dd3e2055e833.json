{"ast":null,"code":"var _jsxFileName = \"/Users/mikejabrhamdan/grides-react-app/src/components/Step2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Step2 = ({\n  history\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [vehicles, setVehicles] = useState([]);\n  useEffect(() => {\n    // Fetch data from Step1\n    const step2Data = JSON.parse(localStorage.getItem('step2Data'));\n    if (step2Data) {\n      const {\n        pickupDateTime,\n        returnDateTime,\n        selectedLocation,\n        customAddress\n      } = step2Data;\n      // Make API call to get available vehicles based on the provided data\n      const fetchData = async () => {\n        try {\n          // Make your API call here with the provided data\n          // Example API call:\n          const response = await axios.get(`https://your-api.com/vehicles?pickupDateTime=${pickupDateTime}&returnDateTime=${returnDateTime}&selectedLocation=${selectedLocation}&customAddress=${customAddress}`);\n          setVehicles(response.data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n          setError('Failed to fetch data');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchData();\n    } else {\n      // Handle case where Step1 data is not available\n      setLoading(false);\n      setError('Step1 data is missing');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), !loading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: vehicles.map(vehicle => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: vehicle.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: vehicle.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, vehicle.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Step2, \"R5tNv50n3/H9ouG7VPF4S1V8UC4=\");\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Step2","history","_s","loading","setLoading","error","setError","vehicles","setVehicles","step2Data","JSON","parse","localStorage","getItem","pickupDateTime","returnDateTime","selectedLocation","customAddress","fetchData","response","get","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","vehicle","name","description","id","_c","$RefreshReg$"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/components/Step2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Step2 = ({ history }) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [vehicles, setVehicles] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from Step1\n    const step2Data = JSON.parse(localStorage.getItem('step2Data'));\n    if (step2Data) {\n      const { pickupDateTime, returnDateTime, selectedLocation, customAddress } = step2Data;\n      // Make API call to get available vehicles based on the provided data\n      const fetchData = async () => {\n        try {\n          // Make your API call here with the provided data\n          // Example API call:\n          const response = await axios.get(`https://your-api.com/vehicles?pickupDateTime=${pickupDateTime}&returnDateTime=${returnDateTime}&selectedLocation=${selectedLocation}&customAddress=${customAddress}`);\n          setVehicles(response.data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n          setError('Failed to fetch data');\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    } else {\n      // Handle case where Step1 data is not available\n      setLoading(false);\n      setError('Step1 data is missing');\n    }\n  }, []);\n\n  return (\n    <div>\n      {loading && <p>Loading...</p>}\n      {!loading && error && <p>{error}</p>}\n      {!loading && !error && (\n        <>\n          {/* Render vehicles catalog here */}\n          {vehicles.map(vehicle => (\n            <div key={vehicle.id}>\n              <h3>{vehicle.name}</h3>\n              <p>{vehicle.description}</p>\n              {/* Render vehicle photo and features */}\n            </div>\n          ))}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Step2;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC/D,IAAIJ,SAAS,EAAE;MACb,MAAM;QAAEK,cAAc;QAAEC,cAAc;QAAEC,gBAAgB;QAAEC;MAAc,CAAC,GAAGR,SAAS;MACrF;MACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF;UACA;UACA,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,gDAA+CN,cAAe,mBAAkBC,cAAe,qBAAoBC,gBAAiB,kBAAiBC,aAAc,EAAC,CAAC;UACvMT,WAAW,CAACW,QAAQ,CAACE,IAAI,CAAC;QAC5B,CAAC,CAAC,OAAOhB,KAAK,EAAE;UACdiB,OAAO,CAACjB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5CC,QAAQ,CAAC,sBAAsB,CAAC;QAClC,CAAC,SAAS;UACRF,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC;MAEDc,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACL;MACAd,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAAC,uBAAuB,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAA0B,QAAA,GACGpB,OAAO,iBAAIN,OAAA;MAAA0B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5B,CAACxB,OAAO,IAAIE,KAAK,iBAAIR,OAAA;MAAA0B,QAAA,EAAIlB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnC,CAACxB,OAAO,IAAI,CAACE,KAAK,iBACjBR,OAAA,CAAAE,SAAA;MAAAwB,QAAA,EAEGhB,QAAQ,CAACqB,GAAG,CAACC,OAAO,iBACnBhC,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAA0B,QAAA,EAAKM,OAAO,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvB9B,OAAA;UAAA0B,QAAA,EAAIM,OAAO,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFpBE,OAAO,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACN;IAAC,gBACF,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnDIF,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AAqDX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";exports.isSameDay=isSameDay;var _index=require(\"./startOfDay.js\");/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */function isSameDay(dateLeft,dateRight){const dateLeftStartOfDay=(0,_index.startOfDay)(dateLeft);const dateRightStartOfDay=(0,_index.startOfDay)(dateRight);return+dateLeftStartOfDay===+dateRightStartOfDay;}","map":{"version":3,"names":["exports","isSameDay","_index","require","dateLeft","dateRight","dateLeftStartOfDay","startOfDay","dateRightStartOfDay"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/isSameDay.js"],"sourcesContent":["\"use strict\";\nexports.isSameDay = isSameDay;\nvar _index = require(\"./startOfDay.js\");\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nfunction isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = (0, _index.startOfDay)(dateLeft);\n  const dateRightStartOfDay = (0, _index.startOfDay)(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,SAAS,CAAGA,SAAS,CAC7B,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,iBAAiB,CAAC,CAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,SAASA,CAACG,QAAQ,CAAEC,SAAS,CAAE,CACtC,KAAM,CAAAC,kBAAkB,CAAG,CAAC,CAAC,CAAEJ,MAAM,CAACK,UAAU,EAAEH,QAAQ,CAAC,CAC3D,KAAM,CAAAI,mBAAmB,CAAG,CAAC,CAAC,CAAEN,MAAM,CAACK,UAAU,EAAEF,SAAS,CAAC,CAE7D,MAAO,CAACC,kBAAkB,GAAK,CAACE,mBAAmB,CACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
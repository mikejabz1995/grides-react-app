{"ast":null,"code":"\"use strict\";exports.match=void 0;var _index=require(\"../../_lib/buildMatchFn.js\");var _index2=require(\"../../_lib/buildMatchPatternFn.js\");const matchOrdinalNumberPattern=/^(\\d+)(th|st|nd|rd)?/i;const parseOrdinalNumberPattern=/\\d+/i;const matchEraPatterns={narrow:/^(b|a)/i,abbreviated:/^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i};const parseEraPatterns={any:[/^b/i,/^(a|c)/i]};const matchQuarterPatterns={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i};const parseQuarterPatterns={any:[/1/i,/2/i,/3/i,/4/i]};const matchMonthPatterns={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i};const parseMonthPatterns={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]};const matchDayPatterns={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i};const parseDayPatterns={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]};const matchDayPeriodPatterns={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i};const parseDayPeriodPatterns={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}};const match=exports.match={ordinalNumber:(0,_index2.buildMatchPatternFn)({matchPattern:matchOrdinalNumberPattern,parsePattern:parseOrdinalNumberPattern,valueCallback:value=>parseInt(value,10)}),era:(0,_index.buildMatchFn)({matchPatterns:matchEraPatterns,defaultMatchWidth:\"wide\",parsePatterns:parseEraPatterns,defaultParseWidth:\"any\"}),quarter:(0,_index.buildMatchFn)({matchPatterns:matchQuarterPatterns,defaultMatchWidth:\"wide\",parsePatterns:parseQuarterPatterns,defaultParseWidth:\"any\",valueCallback:index=>index+1}),month:(0,_index.buildMatchFn)({matchPatterns:matchMonthPatterns,defaultMatchWidth:\"wide\",parsePatterns:parseMonthPatterns,defaultParseWidth:\"any\"}),day:(0,_index.buildMatchFn)({matchPatterns:matchDayPatterns,defaultMatchWidth:\"wide\",parsePatterns:parseDayPatterns,defaultParseWidth:\"any\"}),dayPeriod:(0,_index.buildMatchFn)({matchPatterns:matchDayPeriodPatterns,defaultMatchWidth:\"any\",parsePatterns:parseDayPeriodPatterns,defaultParseWidth:\"any\"})};","map":{"version":3,"names":["exports","match","_index","require","_index2","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","narrow","abbreviated","wide","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","short","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","am","pm","midnight","noon","morning","afternoon","evening","night","ordinalNumber","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","value","parseInt","era","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","quarter","index","month","day","dayPeriod"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/date-fns/locale/en-US/_lib/match.js"],"sourcesContent":["\"use strict\";\nexports.match = void 0;\n\nvar _index = require(\"../../_lib/buildMatchFn.js\");\nvar _index2 = require(\"../../_lib/buildMatchPatternFn.js\");\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nconst match = (exports.match = {\n  ordinalNumber: (0, _index2.buildMatchPatternFn)({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: (0, _index.buildMatchFn)({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: (0, _index.buildMatchFn)({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: (0, _index.buildMatchFn)({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: (0, _index.buildMatchFn)({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: (0, _index.buildMatchFn)({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
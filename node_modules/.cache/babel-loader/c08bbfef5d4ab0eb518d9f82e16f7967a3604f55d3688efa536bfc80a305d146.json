{"ast":null,"code":"\"use strict\";exports.dayPeriodEnumToHours=dayPeriodEnumToHours;exports.isLeapYearIndex=isLeapYearIndex;exports.mapValue=mapValue;exports.normalizeTwoDigitYear=normalizeTwoDigitYear;exports.parseAnyDigitsSigned=parseAnyDigitsSigned;exports.parseNDigits=parseNDigits;exports.parseNDigitsSigned=parseNDigitsSigned;exports.parseNumericPattern=parseNumericPattern;exports.parseTimezonePattern=parseTimezonePattern;var _index=require(\"../../constants.js\");var _constants=require(\"./constants.js\");function mapValue(parseFnResult,mapFn){if(!parseFnResult){return parseFnResult;}return{value:mapFn(parseFnResult.value),rest:parseFnResult.rest};}function parseNumericPattern(pattern,dateString){const matchResult=dateString.match(pattern);if(!matchResult){return null;}return{value:parseInt(matchResult[0],10),rest:dateString.slice(matchResult[0].length)};}function parseTimezonePattern(pattern,dateString){const matchResult=dateString.match(pattern);if(!matchResult){return null;}// Input is 'Z'\nif(matchResult[0]===\"Z\"){return{value:0,rest:dateString.slice(1)};}const sign=matchResult[1]===\"+\"?1:-1;const hours=matchResult[2]?parseInt(matchResult[2],10):0;const minutes=matchResult[3]?parseInt(matchResult[3],10):0;const seconds=matchResult[5]?parseInt(matchResult[5],10):0;return{value:sign*(hours*_index.millisecondsInHour+minutes*_index.millisecondsInMinute+seconds*_index.millisecondsInSecond),rest:dateString.slice(matchResult[0].length)};}function parseAnyDigitsSigned(dateString){return parseNumericPattern(_constants.numericPatterns.anyDigitsSigned,dateString);}function parseNDigits(n,dateString){switch(n){case 1:return parseNumericPattern(_constants.numericPatterns.singleDigit,dateString);case 2:return parseNumericPattern(_constants.numericPatterns.twoDigits,dateString);case 3:return parseNumericPattern(_constants.numericPatterns.threeDigits,dateString);case 4:return parseNumericPattern(_constants.numericPatterns.fourDigits,dateString);default:return parseNumericPattern(new RegExp(\"^\\\\d{1,\"+n+\"}\"),dateString);}}function parseNDigitsSigned(n,dateString){switch(n){case 1:return parseNumericPattern(_constants.numericPatterns.singleDigitSigned,dateString);case 2:return parseNumericPattern(_constants.numericPatterns.twoDigitsSigned,dateString);case 3:return parseNumericPattern(_constants.numericPatterns.threeDigitsSigned,dateString);case 4:return parseNumericPattern(_constants.numericPatterns.fourDigitsSigned,dateString);default:return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\"+n+\"}\"),dateString);}}function dayPeriodEnumToHours(dayPeriod){switch(dayPeriod){case\"morning\":return 4;case\"evening\":return 17;case\"pm\":case\"noon\":case\"afternoon\":return 12;case\"am\":case\"midnight\":case\"night\":default:return 0;}}function normalizeTwoDigitYear(twoDigitYear,currentYear){const isCommonEra=currentYear>0;// Absolute number of the current year:\n// 1 -> 1 AC\n// 0 -> 1 BC\n// -1 -> 2 BC\nconst absCurrentYear=isCommonEra?currentYear:1-currentYear;let result;if(absCurrentYear<=50){result=twoDigitYear||100;}else{const rangeEnd=absCurrentYear+50;const rangeEndCentury=Math.trunc(rangeEnd/100)*100;const isPreviousCentury=twoDigitYear>=rangeEnd%100;result=twoDigitYear+rangeEndCentury-(isPreviousCentury?100:0);}return isCommonEra?result:1-result;}function isLeapYearIndex(year){return year%400===0||year%4===0&&year%100!==0;}","map":{"version":3,"names":["exports","dayPeriodEnumToHours","isLeapYearIndex","mapValue","normalizeTwoDigitYear","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","parseNumericPattern","parseTimezonePattern","_index","require","_constants","parseFnResult","mapFn","value","rest","pattern","dateString","matchResult","match","parseInt","slice","length","sign","hours","minutes","seconds","millisecondsInHour","millisecondsInMinute","millisecondsInSecond","numericPatterns","anyDigitsSigned","n","singleDigit","twoDigits","threeDigits","fourDigits","RegExp","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","dayPeriod","twoDigitYear","currentYear","isCommonEra","absCurrentYear","result","rangeEnd","rangeEndCentury","Math","trunc","isPreviousCentury","year"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/parse/_lib/utils.js"],"sourcesContent":["\"use strict\";\nexports.dayPeriodEnumToHours = dayPeriodEnumToHours;\nexports.isLeapYearIndex = isLeapYearIndex;\nexports.mapValue = mapValue;\nexports.normalizeTwoDigitYear = normalizeTwoDigitYear;\nexports.parseAnyDigitsSigned = parseAnyDigitsSigned;\nexports.parseNDigits = parseNDigits;\nexports.parseNDigitsSigned = parseNDigitsSigned;\nexports.parseNumericPattern = parseNumericPattern;\nexports.parseTimezonePattern = parseTimezonePattern;\nvar _index = require(\"../../constants.js\");\n\nvar _constants = require(\"./constants.js\");\n\nfunction mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nfunction parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nfunction parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * _index.millisecondsInHour +\n        minutes * _index.millisecondsInMinute +\n        seconds * _index.millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nfunction parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(\n    _constants.numericPatterns.anyDigitsSigned,\n    dateString,\n  );\n}\n\nfunction parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(\n        _constants.numericPatterns.singleDigit,\n        dateString,\n      );\n    case 2:\n      return parseNumericPattern(\n        _constants.numericPatterns.twoDigits,\n        dateString,\n      );\n    case 3:\n      return parseNumericPattern(\n        _constants.numericPatterns.threeDigits,\n        dateString,\n      );\n    case 4:\n      return parseNumericPattern(\n        _constants.numericPatterns.fourDigits,\n        dateString,\n      );\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nfunction parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(\n        _constants.numericPatterns.singleDigitSigned,\n        dateString,\n      );\n    case 2:\n      return parseNumericPattern(\n        _constants.numericPatterns.twoDigitsSigned,\n        dateString,\n      );\n    case 3:\n      return parseNumericPattern(\n        _constants.numericPatterns.threeDigitsSigned,\n        dateString,\n      );\n    case 4:\n      return parseNumericPattern(\n        _constants.numericPatterns.fourDigitsSigned,\n        dateString,\n      );\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nfunction dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
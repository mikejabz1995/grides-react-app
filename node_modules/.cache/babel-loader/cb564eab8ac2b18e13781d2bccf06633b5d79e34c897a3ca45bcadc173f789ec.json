{"ast":null,"code":"\"use strict\";exports.startOfYear=startOfYear;var _index=require(\"./toDate.js\");var _index2=require(\"./constructFrom.js\");/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */function startOfYear(date){const cleanDate=(0,_index.toDate)(date);const _date=(0,_index2.constructFrom)(date,0);_date.setFullYear(cleanDate.getFullYear(),0,1);_date.setHours(0,0,0,0);return _date;}","map":{"version":3,"names":["exports","startOfYear","_index","require","_index2","date","cleanDate","toDate","_date","constructFrom","setFullYear","getFullYear","setHours"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/startOfYear.js"],"sourcesContent":["\"use strict\";\nexports.startOfYear = startOfYear;\nvar _index = require(\"./toDate.js\");\nvar _index2 = require(\"./constructFrom.js\");\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear(date) {\n  const cleanDate = (0, _index.toDate)(date);\n  const _date = (0, _index2.constructFrom)(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,WAAW,CAAGA,WAAW,CACjC,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,aAAa,CAAC,CACnC,GAAI,CAAAC,OAAO,CAAGD,OAAO,CAAC,oBAAoB,CAAC,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,WAAWA,CAACI,IAAI,CAAE,CACzB,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAC,CAAEJ,MAAM,CAACK,MAAM,EAAEF,IAAI,CAAC,CAC1C,KAAM,CAAAG,KAAK,CAAG,CAAC,CAAC,CAAEJ,OAAO,CAACK,aAAa,EAAEJ,IAAI,CAAE,CAAC,CAAC,CACjDG,KAAK,CAACE,WAAW,CAACJ,SAAS,CAACK,WAAW,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAChDH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC1B,MAAO,CAAAJ,KAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
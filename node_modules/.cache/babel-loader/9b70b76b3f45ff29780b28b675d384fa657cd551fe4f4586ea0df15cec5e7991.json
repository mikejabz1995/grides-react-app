{"ast":null,"code":"const hasBrowserEnv=typeof window!=='undefined'&&typeof document!=='undefined';/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */const hasStandardBrowserEnv=(product=>{return hasBrowserEnv&&['ReactNative','NativeScript','NS'].indexOf(product)<0;})(typeof navigator!=='undefined'&&navigator.product);/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */const hasStandardBrowserWebWorkerEnv=(()=>{return typeof WorkerGlobalScope!=='undefined'&&// eslint-disable-next-line no-undef\nself instanceof WorkerGlobalScope&&typeof self.importScripts==='function';})();export{hasBrowserEnv,hasStandardBrowserWebWorkerEnv,hasStandardBrowserEnv};","map":{"version":3,"names":["hasBrowserEnv","window","document","hasStandardBrowserEnv","product","indexOf","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","self","importScripts"],"sources":["/Users/mikejabrhamdan/Downloads/grides-react-app-rename/src/node_modules/axios/lib/platform/common/utils.js"],"sourcesContent":["const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n"],"mappings":"AAAA,KAAM,CAAAA,aAAa,CAAG,MAAO,CAAAC,MAAM,GAAK,WAAW,EAAI,MAAO,CAAAC,QAAQ,GAAK,WAAW,CAEtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,qBAAqB,CAAG,CAC3BC,OAAO,EAAK,CACX,MAAO,CAAAJ,aAAa,EAAI,CAAC,aAAa,CAAE,cAAc,CAAE,IAAI,CAAC,CAACK,OAAO,CAACD,OAAO,CAAC,CAAG,CAAC,CACpF,CAAC,EAAE,MAAO,CAAAE,SAAS,GAAK,WAAW,EAAIA,SAAS,CAACF,OAAO,CAAC,CAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAG,8BAA8B,CAAG,CAAC,IAAM,CAC5C,MACE,OAAO,CAAAC,iBAAiB,GAAK,WAAW,EACxC;AACAC,IAAI,WAAY,CAAAD,iBAAiB,EACjC,MAAO,CAAAC,IAAI,CAACC,aAAa,GAAK,UAAU,CAE5C,CAAC,EAAE,CAAC,CAEJ,OACEV,aAAa,CACbO,8BAA8B,CAC9BJ,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
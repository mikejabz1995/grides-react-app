{"ast":null,"code":"\"use strict\";exports.setWeek=setWeek;var _index=require(\"./getWeek.js\");var _index2=require(\"./toDate.js\");/**\n * The {@link setWeek} function options.\n */ /**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */function setWeek(date,week,options){const _date=(0,_index2.toDate)(date);const diff=(0,_index.getWeek)(_date,options)-week;_date.setDate(_date.getDate()-diff*7);return _date;}","map":{"version":3,"names":["exports","setWeek","_index","require","_index2","date","week","options","_date","toDate","diff","getWeek","setDate","getDate"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/setWeek.js"],"sourcesContent":["\"use strict\";\nexports.setWeek = setWeek;\nvar _index = require(\"./getWeek.js\");\nvar _index2 = require(\"./toDate.js\");\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nfunction setWeek(date, week, options) {\n  const _date = (0, _index2.toDate)(date);\n  const diff = (0, _index.getWeek)(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,OAAO,CAAGA,OAAO,CACzB,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,cAAc,CAAC,CACpC,GAAI,CAAAC,OAAO,CAAGD,OAAO,CAAC,aAAa,CAAC,CAEpC;AACA;AACA,GAFA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,OAAOA,CAACI,IAAI,CAAEC,IAAI,CAAEC,OAAO,CAAE,CACpC,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAEJ,OAAO,CAACK,MAAM,EAAEJ,IAAI,CAAC,CACvC,KAAM,CAAAK,IAAI,CAAG,CAAC,CAAC,CAAER,MAAM,CAACS,OAAO,EAAEH,KAAK,CAAED,OAAO,CAAC,CAAGD,IAAI,CACvDE,KAAK,CAACI,OAAO,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAGH,IAAI,CAAG,CAAC,CAAC,CACzC,MAAO,CAAAF,KAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
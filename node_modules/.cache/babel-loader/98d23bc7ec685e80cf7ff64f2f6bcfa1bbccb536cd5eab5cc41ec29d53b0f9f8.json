{"ast":null,"code":"\"use strict\";exports.addDays=addDays;var _index=require(\"./toDate.js\");var _index2=require(\"./constructFrom.js\");/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */function addDays(date,amount){const _date=(0,_index.toDate)(date);if(isNaN(amount))return(0,_index2.constructFrom)(date,NaN);if(!amount){// If 0 days, no-op to avoid changing times in the hour before end of DST\nreturn _date;}_date.setDate(_date.getDate()+amount);return _date;}","map":{"version":3,"names":["exports","addDays","_index","require","_index2","date","amount","_date","toDate","isNaN","constructFrom","NaN","setDate","getDate"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/node_modules/date-fns/addDays.js"],"sourcesContent":["\"use strict\";\nexports.addDays = addDays;\nvar _index = require(\"./toDate.js\");\nvar _index2 = require(\"./constructFrom.js\");\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays(date, amount) {\n  const _date = (0, _index.toDate)(date);\n  if (isNaN(amount)) return (0, _index2.constructFrom)(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n"],"mappings":"AAAA,YAAY,CACZA,OAAO,CAACC,OAAO,CAAGA,OAAO,CACzB,GAAI,CAAAC,MAAM,CAAGC,OAAO,CAAC,aAAa,CAAC,CACnC,GAAI,CAAAC,OAAO,CAAGD,OAAO,CAAC,oBAAoB,CAAC,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAF,OAAOA,CAACI,IAAI,CAAEC,MAAM,CAAE,CAC7B,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAEL,MAAM,CAACM,MAAM,EAAEH,IAAI,CAAC,CACtC,GAAII,KAAK,CAACH,MAAM,CAAC,CAAE,MAAO,CAAC,CAAC,CAAEF,OAAO,CAACM,aAAa,EAAEL,IAAI,CAAEM,GAAG,CAAC,CAC/D,GAAI,CAACL,MAAM,CAAE,CACX;AACA,MAAO,CAAAC,KAAK,CACd,CACAA,KAAK,CAACK,OAAO,CAACL,KAAK,CAACM,OAAO,CAAC,CAAC,CAAGP,MAAM,CAAC,CACvC,MAAO,CAAAC,KAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
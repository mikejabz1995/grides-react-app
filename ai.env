require('dotenv').config();
const { Configuration, OpenAIApi } = require("openai");


   REACT_APP_OPENAI_API_KEY=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
   
async function fetchYourVehicleData() {
  try {
    const response = await axios.get('YOUR_VEHICLE_DATA_API_ENDPOINT');
    return response.data; // Assuming the API returns the data directly
  } catch (error) {
    console.error('Failed to fetch vehicle data:', error);
    return []; // Return an empty array or handle the error as needed
  }
}

const generateColorDescription = (color) => `${color.charAt(0).toUpperCase() + color.slice(1)} - uniquely vibrant`;
const generateVehicleShortDescription = (vehicle) => `${vehicle.year} ${vehicle.make} ${vehicle.model}, featuring ${vehicle.options.slice(0, 3).join(', ')}`;

const Step2 = () => {
  const [vehicles, setVehicles] = useState([]);

  useEffect(() => {
    const fetchVehicles = async () => {
      try {
        const response = await axios.get('YOUR_API_ENDPOINT');
        const fetchedVehicles = response.data.map(vehicle => ({
          ...vehicle,
          colorDescription: generateColorDescription(vehicle.color),
          shortDescription: generateVehicleShortDescription(vehicle),
        }));

        setVehicles(fetchedVehicles);
      } catch (error) {
        console.error('Failed to fetch vehicles:', error);
      }
    };

    fetchVehicles();
  }, []);

  return (
    <div>
      {vehicles.map((vehicle, index) => (
        <div key={index} className="vehicle-item">
          <h3>{vehicle.title}</h3>
          <p>Color: {vehicle.colorDescription || vehicle.color}</p>
          <p>Description: {vehicle.shortDescription}</p>
        </div>
      ))}
    </div>
  );
};

export default Step2;

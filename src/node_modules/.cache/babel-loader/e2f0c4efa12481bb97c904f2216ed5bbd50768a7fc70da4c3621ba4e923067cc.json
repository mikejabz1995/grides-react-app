{"ast":null,"code":"var _jsxFileName = \"/Users/mikejabrhamdan/grides-react-app/src/components/Step2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport './App.css';\nimport moment from 'moment';\n\n// Define defaultFilters before using it\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFilters = {\n  tripPrice: {\n    min: 0,\n    max: 1000\n  },\n  vehicleType: 'All',\n  fuelType: 'All',\n  transmission: 'All'\n};\nfunction safeDateFormat(dateInput) {\n  // Check if the dateInput is not null, undefined, or an empty string\n  if (!dateInput) {\n    console.error('Date input is undefined, null, or empty');\n    return 'Invalid Date';\n  }\n  const date = new Date(dateInput);\n\n  // Check if the date is valid\n  if (isNaN(date.getTime())) {\n    console.error('Invalid date:', dateInput);\n    return 'Invalid Date';\n  }\n\n  // If the date is valid, format it\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(date);\n}\nconst formatDate = dateString => {\n  if (!dateString) return 'Invalid Date'; // Handle null, undefined, or empty string more safely\n\n  const date = new Date(dateString);\n  if (isNaN(date.getTime())) {\n    return 'Invalid Date'; // Return 'Invalid Date' if the date is not valid\n  }\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return new Intl.DateTimeFormat('en-US', options).format(date);\n};\nfunction validateAndFormatDate(dateString) {\n  if (!dateString) return ''; // Handle null, undefined, or empty string\n\n  const date = moment(dateString);\n  if (!date.isValid()) {\n    console.error('Invalid date:', dateString);\n    return ''; // Return an empty string or handle as needed\n  }\n  return date.format('YYYY-MM-DD HH:mm:ss');\n}\nconst Step2 = () => {\n  _s();\n  const [vehicles, setVehicles] = useState([]);\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      try {\n        const response = await axios.get('API_ENDPOINT_URL');\n        const vehicleCatalog = response.data.vehicles.map(vehicle => ({\n          name: `${vehicle.brand} ${vehicle.mark}`,\n          year: vehicle.year,\n          seats: vehicle.number_seats,\n          doors: vehicle.number_doors,\n          largeBags: vehicle.large_bags,\n          smallBags: vehicle.small_bags,\n          odometer: vehicle.odometer,\n          group: vehicle.group,\n          color: vehicle.color.title,\n          type: vehicle.type,\n          bodyType: vehicle.body_type,\n          price: vehicle.price,\n          currency: vehicle.currency,\n          consumption: vehicle.consumption,\n          fuel: vehicle.fuel,\n          volumeTank: vehicle.volume_tank,\n          volumeEngine: vehicle.volume_engine,\n          transmission: vehicle.transmission,\n          wheelDrive: vehicle.wheel_drive,\n          registrationNumber: vehicle.registration_number,\n          totalPrice: vehicle.total_price,\n          countDays: vehicle.count_days,\n          refill: vehicle.refill,\n          mileageLimit: vehicle.mileage_limit,\n          thumbnail: vehicle.thumbnail,\n          photos: vehicle.photos,\n          options: vehicle.options.map(option => option.name)\n        }));\n        setVehicles(vehicleCatalog);\n      } catch (error) {\n        console.error('Failed to fetch vehicles:', error);\n      }\n    };\n    fetchVehicles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vehicle-catalog\",\n    children: vehicles.length > 0 ? vehicles.map((vehicle, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vehicle-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: vehicle.thumbnail,\n        alt: vehicle.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: vehicle.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Year: \", vehicle.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Seats: \", vehicle.seats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", vehicle.currency, vehicle.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading vehicles...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Step2, \"F+3Wwuoj92cy/fYg4DPIUSmtheM=\");\n_c = Step2;\nexport default Step2;\nvar _c;\n$RefreshReg$(_c, \"Step2\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","moment","jsxDEV","_jsxDEV","defaultFilters","tripPrice","min","max","vehicleType","fuelType","transmission","safeDateFormat","dateInput","console","error","date","Date","isNaN","getTime","options","year","month","day","Intl","DateTimeFormat","format","formatDate","dateString","validateAndFormatDate","isValid","Step2","_s","vehicles","setVehicles","fetchVehicles","response","get","vehicleCatalog","data","map","vehicle","name","brand","mark","seats","number_seats","doors","number_doors","largeBags","large_bags","smallBags","small_bags","odometer","group","color","title","type","bodyType","body_type","price","currency","consumption","fuel","volumeTank","volume_tank","volumeEngine","volume_engine","wheelDrive","wheel_drive","registrationNumber","registration_number","totalPrice","total_price","countDays","count_days","refill","mileageLimit","mileage_limit","thumbnail","photos","option","className","children","length","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mikejabrhamdan/grides-react-app/src/components/Step2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport './App.css';\nimport moment from 'moment';\n\n\n\n// Define defaultFilters before using it\nconst defaultFilters = {\n  tripPrice: { min: 0, max: 1000 },\n  vehicleType: 'All',\n  fuelType: 'All',\n  transmission: 'All',\n};\n\nfunction safeDateFormat(dateInput) {\n  // Check if the dateInput is not null, undefined, or an empty string\n  if (!dateInput) {\n    console.error('Date input is undefined, null, or empty');\n    return 'Invalid Date';\n  }\n\n  const date = new Date(dateInput);\n\n  // Check if the date is valid\n  if (isNaN(date.getTime())) {\n    console.error('Invalid date:', dateInput);\n    return 'Invalid Date';\n  }\n\n  // If the date is valid, format it\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\n  return new Intl.DateTimeFormat('en-US', options).format(date);\n}\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Invalid Date'; // Handle null, undefined, or empty string more safely\n\n  const date = new Date(dateString);\n  if (isNaN(date.getTime())) {\n    return 'Invalid Date'; // Return 'Invalid Date' if the date is not valid\n  }\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\n  return new Intl.DateTimeFormat('en-US', options).format(date);\n};\n\n\nfunction validateAndFormatDate(dateString) {\n  if (!dateString) return ''; // Handle null, undefined, or empty string\n\n  const date = moment(dateString);\n  if (!date.isValid()) {\n    console.error('Invalid date:', dateString);\n    return ''; // Return an empty string or handle as needed\n  }\n\n  return date.format('YYYY-MM-DD HH:mm:ss');\n}\n\nconst Step2 = () => {\n  const [vehicles, setVehicles] = useState([]);\n\n  useEffect(() => {\n    const fetchVehicles = async () => {\n      try {\n        const response = await axios.get('API_ENDPOINT_URL');\n        const vehicleCatalog = response.data.vehicles.map(vehicle => ({\n          name: `${vehicle.brand} ${vehicle.mark}`,\n          year: vehicle.year,\n          seats: vehicle.number_seats,\n          doors: vehicle.number_doors,\n          largeBags: vehicle.large_bags,\n          smallBags: vehicle.small_bags,\n          odometer: vehicle.odometer,\n          group: vehicle.group,\n          color: vehicle.color.title,\n          type: vehicle.type,\n          bodyType: vehicle.body_type,\n          price: vehicle.price,\n          currency: vehicle.currency,\n          consumption: vehicle.consumption,\n          fuel: vehicle.fuel,\n          volumeTank: vehicle.volume_tank,\n          volumeEngine: vehicle.volume_engine,\n          transmission: vehicle.transmission,\n          wheelDrive: vehicle.wheel_drive,\n          registrationNumber: vehicle.registration_number,\n          totalPrice: vehicle.total_price,\n          countDays: vehicle.count_days,\n          refill: vehicle.refill,\n          mileageLimit: vehicle.mileage_limit,\n          thumbnail: vehicle.thumbnail,\n          photos: vehicle.photos,\n          options: vehicle.options.map(option => option.name)\n        }));\n        setVehicles(vehicleCatalog);\n      } catch (error) {\n        console.error('Failed to fetch vehicles:', error);\n      }\n    };\n\n    fetchVehicles();\n  }, []);\n\n  return (\n    <div className=\"vehicle-catalog\">\n      {vehicles.length > 0 ? (\n        vehicles.map((vehicle, index) => (\n          <div key={index} className=\"vehicle-item\">\n            <img src={vehicle.thumbnail} alt={vehicle.name} />\n            <h3>{vehicle.name}</h3>\n            <p>Year: {vehicle.year}</p>\n            <p>Seats: {vehicle.seats}</p>\n            <p>Price: {vehicle.currency}{vehicle.price}</p>\n            {/* Add more details as needed */}\n          </div>\n        ))\n      ) : (\n        <p>Loading vehicles...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Step2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}